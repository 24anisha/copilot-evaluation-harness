{
    "case_id": "case-5091",
    "repo_name": "bytedeco/javacv",
    "file_path": "src/main/java/org/bytedeco/javacv/GNImageAligner.java",
    "code_snippet": "    public static class Settings extends ImageAligner.Settings implements Cloneable {\n        public Settings() { }\n        public Settings(Settings s) {\n            super(s);\n            stepSize        = s.stepSize;\n            lineSearch      = s.lineSearch;\n            deltaMin        = s.deltaMin;\n            deltaMax        = s.deltaMax;\n            displacementMax = s.displacementMax;\n            alphaSubspace   = s.alphaSubspace;\n            alphaTikhonov   = s.alphaTikhonov;\n            gammaTgamma     = s.gammaTgamma;\n            constrained     = s.constrained;\n        }\n\n        double stepSize        = 0.1;\n        double[] lineSearch    = {1.0, 0.25};\n        double deltaMin        = 10;\n        double deltaMax        = 300;\n        double displacementMax = 0.2;\n        double alphaSubspace   = 0.1;\n        double alphaTikhonov   = 0;\n        CvMat gammaTgamma      = null;\n        boolean constrained    = false;\n\n        public double getStepSize() {\n            return stepSize;\n        }\n        public void setStepSize(double stepSize) {\n            this.stepSize = stepSize;\n        }\n\n        public double[] getLineSearch() {\n            return lineSearch;\n        }\n        public void setLineSearch(double[] lineSearch) {\n            this.lineSearch = lineSearch;\n        }\n\n        public double getDeltaMin() {\n            return deltaMin;\n        }\n        public void setDeltaMin(double deltaMin) {\n            this.deltaMin = deltaMin;\n        }\n\n        public double getDeltaMax() {\n            return deltaMax;\n        }\n        public void setDeltaMax(double deltaMax) {\n            this.deltaMax = deltaMax;\n        }\n\n        public double getDisplacementMax() {\n            return displacementMax;\n        }\n        public void setDisplacementMax(double displacementMax) {\n            this.displacementMax = displacementMax;\n        }\n\n        public double getAlphaSubspace() {\n            return alphaSubspace;\n        }\n        public void setAlphaSubspace(double alphaSubspace) {\n            this.alphaSubspace = alphaSubspace;\n        }\n\n        public double getAlphaTikhonov() {\n            return alphaTikhonov;\n        }\n        public void setAlphaTikhonov(double alphaTikhonov) {\n            this.alphaTikhonov = alphaTikhonov;\n        }\n\n        public CvMat getGammaTgamma() {\n            return gammaTgamma;\n        }\n        public void setGammaTgamma(CvMat gammaTgamma) {\n            this.gammaTgamma = gammaTgamma;\n        }\n\n//        public boolean isConstrained() {\n//            return constrained;\n//        }\n//        public void setConstrained(boolean constrained) {\n//            this.constrained = constrained;\n//        }\n\n        @Override public Settings clone() {\n            return new Settings(this);\n",
    "line_range": [
        121,
        210
    ],
    "command_specific_fields": {
        "static_analyzer": "spotbugs",
        "rule": "spotbugs-RI_REDUNDANT_INTERFACES",
        "analyzer_error": "Class implements same interface as superclass"
    }
}