{
    "case_id": "case-1592",
    "repo_name": "yaml/pyyaml",
    "file_path": "lib/yaml/constructor.py",
    "code_snippet": "\n\n    def construct_python_object_apply(self, suffix, node, newobj=False):\n\n        # Format:\n\n        #   !!python/object/apply       # (or !!python/object/new)\n\n        #   args: [ ... arguments ... ]\n\n        #   kwds: { ... keywords ... }\n\n        #   state: ... state ...\n\n        #   listitems: [ ... listitems ... ]\n\n        #   dictitems: { ... dictitems ... }\n\n        # or short format:\n\n        #   !!python/object/apply [ ... arguments ... ]\n\n        # The difference between !!python/object/apply and !!python/object/new\n\n        # is how an object is created, check make_python_instance for details.\n\n        if isinstance(node, SequenceNode):\n\n            args = self.construct_sequence(node, deep=True)\n\n            kwds = {}\n\n            state = {}\n\n            listitems = []\n\n            dictitems = {}\n\n        else:\n\n            value = self.construct_mapping(node, deep=True)\n\n            args = value.get('args', [])\n\n            kwds = value.get('kwds', {})\n\n            state = value.get('state', {})\n\n            listitems = value.get('listitems', [])\n\n            dictitems = value.get('dictitems', {})\n\n        instance = self.make_python_instance(suffix, node, args, kwds, newobj)\n\n        if state:\n\n            self.set_python_instance_state(instance, state)\n\n        if listitems:\n\n            instance.extend(listitems)\n\n        if dictitems:\n\n            for key in dictitems:\n\n                instance[key] = dictitems[key]\n\n        return instance\n",
    "line_range": [
        621,
        656
    ],
    "command_specific_fields": {
        "method_name": "construct_python_object_apply"
    },
    "language": "python",
    "commit": "a2d19c0234866dc9d4d55abf3009699c258bb72f",
    "prompt": ""
}