{
    "case_id": "case-0",
    "repo_name": "mitmproxy/mitmproxy",
    "file_path": "mitmproxy/certs.py",
    "code_snippet": "        path.mkdir(parents=True, exist_ok=True)\n\n        organization = organization or basename\n        cn = cn or basename\n\n        key: rsa.RSAPrivateKeyWithSerialization\n        ca: x509.Certificate\n        key, ca = create_ca(organization=organization, cn=cn, key_size=key_size)\n\n        \n        with CertStore.umask_secret():\n            \n            (path / f\"{basename}-ca.pem\").write_bytes(\n                key.private_bytes(\n                    encoding=serialization.Encoding.PEM,\n                    format=serialization.PrivateFormat.TraditionalOpenSSL,\n                    encryption_algorithm=serialization.NoEncryption(),\n                )\n                + ca.public_bytes(serialization.Encoding.PEM)\n            )\n\n            \n            (path / f\"{basename}-ca.p12\").write_bytes(\n                pkcs12.serialize_key_and_certificates(  \n                    name=basename.encode(),\n                    key=key,\n                    cert=ca,\n                    cas=None,\n                    encryption_algorithm=serialization.NoEncryption(),\n                )\n            )\n\n        \n        pem_cert = ca.public_bytes(serialization.Encoding.PEM)\n        (path / f\"{basename}-ca-cert.pem\").write_bytes(pem_cert)\n        \n        (path / f\"{basename}-ca-cert.cer\").write_bytes(pem_cert)\n\n        \n        (path / f\"{basename}-ca-cert.p12\").write_bytes(\n            pkcs12.serialize_key_and_certificates(\n                name=basename.encode(),\n                key=None,  \n                cert=ca,\n                cas=None,\n                encryption_algorithm=serialization.NoEncryption(),\n            )\n        )\n\n        (path / f\"{basename}-dhparam.pem\").write_bytes(DEFAULT_DHPARAM)",
    "line_range": [
        442,
        497
    ],
    "command_specific_fields": {
        "method_name": "create_store"
    },
    "language": "python",
    "commit": "b08acf4ab8d51405563123793e644c0c2aa52c6e",
    "prompt": ""
}