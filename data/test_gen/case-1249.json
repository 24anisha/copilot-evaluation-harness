{
    "case_id": "case-1249",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/core/token_usage.py",
    "code_snippet": "        return token_cost\n\n    def num_tokens_from_messages(self, messages: List[Message]) -> int:\n        \"\"\"\n        Get the total number of tokens used by a list of messages, accounting for text and base64 encoded images.\n\n        Parameters\n        ----------\n        messages : List[Message]\n            The list of messages to count the tokens in.\n\n        Returns\n        -------\n        int\n            The total number of tokens used by the messages.\n        \"\"\"\n        n_tokens = 0\n        for message in messages:\n            n_tokens += 4  # Account for message framing tokens\n\n            if isinstance(message.content, str):\n                # Content is a simple string\n                n_tokens += self.num_tokens(message.content)\n            elif isinstance(message.content, list):\n                # Content is a list, potentially mixed with text and images\n                for item in message.content:\n                    if item.get(\"type\") == \"text\":\n                        n_tokens += self.num_tokens(item[\"text\"])\n                    elif item.get(\"type\") == \"image_url\":\n                        image_detail = item[\"image_url\"].get(\"detail\", \"high\")\n                        image_base64 = item[\"image_url\"].get(\"url\")\n                        n_tokens += self.num_tokens_for_base64_image(\n                            image_base64, detail=image_detail\n                        )\n\n            n_tokens += 2  # Account for assistant's reply framing tokens\n\n        return n_tokens\n",
    "line_range": [
        140,
        177
    ],
    "command_specific_fields": {
        "method_name": "num_tokens_from_messages"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}