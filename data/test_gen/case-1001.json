{
    "case_id": "case-1001",
    "repo_name": "maurosoria/dirsearch",
    "file_path": "lib/core/options.py",
    "code_snippet": "            else:\n                status_codes.add(int(status_code.strip()))\n        except ValueError:\n            print(f\"Invalid status code or status code range: {status_code}\")\n            exit(1)\n\n    return status_codes\n\n\ndef _access_file(path: str) -> File:\n    with File(path) as fd:\n        if not fd.exists():\n            print(f\"{path} does not exist\")\n            exit(1)\n\n        if not fd.is_valid():\n            print(f\"{path} is not a file\")\n            exit(1)\n\n        if not fd.can_read():\n            print(f\"{path} cannot be read\")\n            exit(1)\n\n        return fd\n\n\ndef merge_config(opt: Values) -> Values:\n    config = ConfigParser()\n    config.read(opt.config)\n\n    # General\n    opt.thread_count = opt.thread_count or config.safe_getint(\"general\", \"threads\", 25)\n    opt.async_mode = opt.async_mode or config.safe_getboolean(\"general\", \"async\")\n    opt.include_status_codes = opt.include_status_codes or config.safe_get(\n        \"general\", \"include-status\"\n    )\n    opt.exclude_status_codes = opt.exclude_status_codes or config.safe_get(\n        \"general\", \"exclude-status\"\n    )\n    opt.exclude_sizes = opt.exclude_sizes or config.safe_get(\n        \"general\", \"exclude-sizes\", \"\"\n    )\n    opt.exclude_texts = opt.exclude_texts or config.safe_getlist(\n        \"general\", \"exclude-texts\"\n    )\n    opt.exclude_regex = opt.exclude_regex or config.safe_get(\"general\", \"exclude-regex\")\n    opt.exclude_redirect = opt.exclude_redirect or config.safe_get(\n        \"general\", \"exclude-redirect\"\n    )\n    opt.exclude_response = opt.exclude_response or config.safe_get(\n        \"general\", \"exclude-response\"\n    )\n    opt.recursive = opt.recursive or config.safe_getboolean(\"general\", \"recursive\")\n    opt.deep_recursive = opt.deep_recursive or config.safe_getboolean(\n        \"general\", \"deep-recursive\"\n    )\n    opt.force_recursive = opt.force_recursive or config.safe_getboolean(\n        \"general\", \"force-recursive\"\n    )\n    opt.recursion_depth = opt.recursion_depth or config.safe_getint(\n        \"general\", \"max-recursion-depth\"\n    )\n    opt.recursion_status_codes = opt.recursion_status_codes or config.safe_get(\n        \"general\", \"recursion-status\", \"100-999\"\n    )\n    opt.subdirs = opt.subdirs or config.safe_get(\"general\", \"subdirs\", \"\")\n    opt.exclude_subdirs = opt.exclude_subdirs or config.safe_get(\n        \"general\", \"exclude-subdirs\", \"\"\n    )\n    opt.skip_on_status = opt.skip_on_status or config.safe_get(\n        \"general\", \"skip-on-status\", \"\"\n    )\n    opt.max_time = opt.max_time or config.safe_getint(\"general\", \"max-time\")\n    opt.exit_on_error = opt.exit_on_error or config.safe_getboolean(\n        \"general\", \"exit-on-error\"\n    )\n\n    # Dictionary\n    opt.wordlists = opt.wordlists or config.safe_get(\n        \"dictionary\",\n        \"wordlists\",\n        FileUtils.build_path(SCRIPT_PATH, \"db\", \"dicc.txt\"),\n    )\n    opt.extensions = opt.extensions or config.safe_get(\n        \"dictionary\", \"default-extensions\", \"\"\n    )\n    opt.force_extensions = opt.force_extensions or config.safe_getboolean(\n        \"dictionary\", \"force-extensions\"\n    )\n    opt.overwrite_extensions = opt.overwrite_extensions or config.safe_getboolean(\n        \"dictionary\", \"overwrite-extensions\"\n    )\n    opt.exclude_extensions = opt.exclude_extensions or config.safe_get(\n        \"dictionary\", \"exclude-extensions\", \"\"\n    )\n    opt.prefixes = opt.prefixes or config.safe_get(\"dictionary\", \"prefixes\", \"\")\n    opt.suffixes = opt.suffixes or config.safe_get(\"dictionary\", \"suffixes\", \"\")\n    opt.lowercase = opt.lowercase or config.safe_getboolean(\"dictionary\", \"lowercase\")\n    opt.uppercase = opt.uppercase or config.safe_getboolean(\"dictionary\", \"uppercase\")\n    opt.capital = opt.capital or config.safe_getboolean(\n        \"dictionary\", \"capital\"\n    )\n\n    # Request\n    opt.http_method = opt.http_method or config.safe_get(\n        \"request\", \"http-method\", \"get\"\n    )\n    opt.headers = opt.headers or config.safe_getlist(\"request\", \"headers\")\n    opt.headers_file = opt.headers_file or config.safe_get(\"request\", \"headers-file\")\n    opt.follow_redirects = opt.follow_redirects or config.safe_getboolean(\n        \"request\", \"follow-redirects\"\n    )\n    opt.random_agents = opt.random_agents or config.safe_getboolean(\n        \"request\", \"random-user-agents\"\n    )\n    opt.user_agent = opt.user_agent or config.safe_get(\"request\", \"user-agent\")\n    opt.cookie = opt.cookie or config.safe_get(\"request\", \"cookie\")\n\n    # Connection\n    opt.delay = opt.delay or config.safe_getfloat(\"connection\", \"delay\")\n    opt.timeout = opt.timeout or config.safe_getfloat(\"connection\", \"timeout\", 7.5)\n    opt.max_retries = opt.max_retries or config.safe_getint(\n        \"connection\", \"max-retries\", 1\n    )\n    opt.max_rate = opt.max_rate or config.safe_getint(\"connection\", \"max-rate\")\n    opt.proxies = opt.proxies or config.safe_getlist(\"connection\", \"proxies\")\n    opt.proxies_file = opt.proxies_file or config.safe_get(\"connection\", \"proxies-file\")\n    opt.scheme = opt.scheme or config.safe_get(\n        \"connection\", \"scheme\", None, (\"http\", \"https\")\n    )\n    opt.replay_proxy = opt.replay_proxy or config.safe_get(\"connection\", \"replay-proxy\")\n",
    "line_range": [
        241,
        371
    ],
    "command_specific_fields": {
        "method_name": "parse_config"
    },
    "language": "python",
    "commit": "59bc9ce43063a1036cf0077f2f1e68883397dac4",
    "prompt": ""
}