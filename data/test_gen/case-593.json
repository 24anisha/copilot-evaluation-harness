{
    "case_id": "case-593",
    "repo_name": "cheeriojs/cheerio",
    "file_path": "src/api/attributes.ts",
    "code_snippet": " * @see {@link https://api.jquery.com/toggleClass/}\n\n */\n\nexport function toggleClass<T extends AnyNode, R extends ArrayLike<T>>(\n\n  this: R,\n\n  value?:\n\n    | string\n\n    | ((\n\n        this: Element,\n\n        i: number,\n\n        className: string,\n\n        stateVal?: boolean,\n\n      ) => string),\n\n  stateVal?: boolean,\n\n): R {\n\n  // Support functions\n\n  if (typeof value === 'function') {\n\n    return domEach(this, (el, i) => {\n\n      if (isTag(el)) {\n\n        toggleClass.call(\n\n          [el],\n\n          value.call(el, i, el.attribs['class'] || '', stateVal),\n\n          stateVal,\n\n        );\n\n      }\n\n    });\n\n  }\n\n\n\n  // Return if no value or not a string or function\n\n  if (!value || typeof value !== 'string') return this;\n\n\n\n  const classNames = value.split(rspace);\n\n  const numClasses = classNames.length;\n\n  const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n\n  const numElements = this.length;\n\n\n\n  for (let i = 0; i < numElements; i++) {\n\n    const el = this[i];\n\n    // If selected element isn't a tag, move on\n\n    if (!isTag(el)) continue;\n\n\n\n    const elementClasses = splitNames(el.attribs['class']);\n\n\n\n    // Check if class already exists\n\n    for (let j = 0; j < numClasses; j++) {\n\n      // Check if the class name is currently defined\n\n      const index = elementClasses.indexOf(classNames[j]);\n\n\n\n      // Add if stateValue === true or we are toggling and there is no value\n\n      if (state >= 0 && index < 0) {\n\n        elementClasses.push(classNames[j]);\n\n      } else if (state <= 0 && index >= 0) {\n\n        // Otherwise remove but only if the item exists\n\n        elementClasses.splice(index, 1);\n\n      }\n\n    }\n\n\n\n    el.attribs['class'] = elementClasses.join(' ');\n\n  }\n\n\n\n  return this;\n\n}\n",
    "line_range": [
        1072,
        1132
    ],
    "command_specific_fields": {
        "method_name": "toggleClass"
    },
    "language": "typescript",
    "commit": "da0b8840f42489030da52172f08d79d4509c999b",
    "prompt": ""
}