{
    "case_id": "case-794",
    "repo_name": "yaml/pyyaml",
    "file_path": "lib/yaml/scanner.py",
    "code_snippet": "                style)\n\n\n\n    def scan_block_scalar_indicators(self, start_mark):\n\n        # See the specification for details.\n\n        chomping = None\n\n        increment = None\n\n        ch = self.peek()\n\n        if ch in '+-':\n\n            if ch == '+':\n\n                chomping = True\n\n            else:\n\n                chomping = False\n\n            self.forward()\n\n            ch = self.peek()\n\n            if ch in '0123456789':\n\n                increment = int(ch)\n\n                if increment == 0:\n\n                    raise ScannerError(\"while scanning a block scalar\", start_mark,\n\n                            \"expected indentation indicator in the range 1-9, but found 0\",\n\n                            self.get_mark())\n\n                self.forward()\n\n        elif ch in '0123456789':\n\n            increment = int(ch)\n\n            if increment == 0:\n\n                raise ScannerError(\"while scanning a block scalar\", start_mark,\n\n                        \"expected indentation indicator in the range 1-9, but found 0\",\n\n                        self.get_mark())\n\n            self.forward()\n\n            ch = self.peek()\n\n            if ch in '+-':\n\n                if ch == '+':\n\n                    chomping = True\n\n                else:\n\n                    chomping = False\n\n                self.forward()\n\n        ch = self.peek()\n\n        if ch not in '\\0 \\r\\n\\x85\\u2028\\u2029':\n\n            raise ScannerError(\"while scanning a block scalar\", start_mark,\n\n                    \"expected chomping or indentation indicators, but found %r\"\n\n                    % ch, self.get_mark())\n\n        return chomping, increment\n",
    "line_range": [
        1050,
        1090
    ],
    "command_specific_fields": {
        "method_name": "scan_block_scalar_indicators"
    },
    "language": "python",
    "commit": "a2d19c0234866dc9d4d55abf3009699c258bb72f",
    "prompt": ""
}