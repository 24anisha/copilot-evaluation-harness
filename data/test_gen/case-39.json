{
    "case_id": "case-39",
    "repo_name": "enquirer/enquirer",
    "file_path": "lib/types/string.js",
    "code_snippet": "\n\n  async keypress(input, key = input ? keypress(input, {}) : {}) {\n\n    const now = Date.now();\n\n    const elapsed = now - this.lastKeypress;\n\n    this.lastKeypress = now;\n\n\n\n    const isEnterKey = key.name === 'return' || key.name === 'enter';\n\n    let prev = this.state.prevKeypress;\n\n    let append;\n\n    this.state.prevKeypress = key;\n\n\n\n    if (this.keypressTimeout != null && isEnterKey) {\n\n      if (elapsed < this.keypressTimeout) {\n\n        return this.submit();\n\n      }\n\n\n\n      this.state.multilineBuffer = this.state.multilineBuffer || '';\n\n      this.state.multilineBuffer += input;\n\n      append = true;\n\n      prev = null;\n\n    }\n\n\n\n    if (append || (this.options.multiline && isEnterKey)) {\n\n      if (!prev || prev.name !== 'return') {\n\n        return this.append('\\n', key);\n\n      }\n\n    }\n\n\n\n    return super.keypress(input, key);\n\n  }\n",
    "line_range": [
        19,
        49
    ],
    "command_specific_fields": {
        "method_name": "keypress"
    },
    "language": "javascript",
    "commit": "70bdb0fedc3ed355d9d8fe4f00ac9b3874f94f61",
    "prompt": ""
}