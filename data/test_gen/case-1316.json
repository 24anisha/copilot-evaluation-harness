{
    "case_id": "case-1316",
    "repo_name": "alicevision/Meshroom",
    "file_path": "meshroom/nodes/blender/scripts/preview.py",
    "code_snippet": "        meshName = os.path.splitext(os.path.basename(filename))[0]\n        return bpy.data.objects[meshName], bpy.data.meshes[meshName]\n    elif filename.lower().endswith('.abc'):\n        bpy.ops.wm.alembic_import(filepath=filename)\n        root = bpy.data.objects['mvgRoot']\n        root.rotation_euler.rotate_axis('X', math.radians(-90.0))\n        return bpy.data.objects['mvgPointCloud'], bpy.data.meshes['particleShape1']\n\n\ndef setupWireframeShading(mesh, color):\n    '''Setup material for wireframe shading.'''\n    # Initialize wireframe material\n    material = bpy.data.materials.new('Wireframe')\n    material.use_backface_culling = True\n    material.use_nodes = True\n    material.blend_method = 'BLEND'\n    material.node_tree.links.clear()\n    # Wireframe node\n    nodeWireframe = material.node_tree.nodes.new(type='ShaderNodeWireframe')\n    nodeWireframe.use_pixel_size = True\n    nodeWireframe.inputs['Size'].default_value = 2.0\n    # Emission node\n    nodeEmission = material.node_tree.nodes.new(type='ShaderNodeEmission')\n    nodeEmission.inputs['Color'].default_value = color\n    # Holdout node\n    nodeHoldout = material.node_tree.nodes.new(type='ShaderNodeHoldout')\n    # Max Shader node\n    nodeMix = material.node_tree.nodes.new(type='ShaderNodeMixShader')\n    # Retrieve ouput node\n    nodeOutput = material.node_tree.nodes['Material Output']\n    # Connect nodes\n",
    "line_range": [
        219,
        249
    ],
    "command_specific_fields": {
        "method_name": "setupWireframeShading"
    },
    "language": "python",
    "commit": "cadac0fa699e086dbf1d0713f67f3ee921f6b949",
    "prompt": ""
}