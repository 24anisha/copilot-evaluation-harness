{
    "case_id": "case-364",
    "repo_name": "nock/nock",
    "file_path": "lib/intercepted_request_router.js",
    "code_snippet": "  }\n\n\n\n  connectSocket() {\n\n    const { req, socket } = this\n\n\n\n    if (common.isRequestDestroyed(req)) {\n\n      return\n\n    }\n\n\n\n    // ClientRequest.connection is an alias for ClientRequest.socket\n\n    // https://nodejs.org/api/http.html#http_request_socket\n\n    // https://github.com/nodejs/node/blob/b0f75818f39ed4e6bd80eb7c4010c1daf5823ef7/lib/_http_client.js#L640-L641\n\n    // The same Socket is shared between the request and response to mimic native behavior.\n\n    req.socket = req.connection = socket\n\n\n\n    propagate(['error', 'timeout'], socket, req)\n\n    socket.on('close', () => socketOnClose(req))\n\n\n\n    socket.connecting = false\n\n    req.emit('socket', socket)\n\n\n\n    // https://nodejs.org/api/net.html#net_event_connect\n\n    socket.emit('connect')\n\n\n\n    // https://nodejs.org/api/tls.html#tls_event_secureconnect\n\n    if (socket.authorized) {\n\n      socket.emit('secureConnect')\n\n    }\n\n\n\n    if (this.readyToStartPlaybackOnSocketEvent) {\n\n      this.maybeStartPlayback()\n\n    }\n\n  }\n",
    "line_range": [
        110,
        142
    ],
    "command_specific_fields": {
        "method_name": "connectSocket"
    },
    "language": "javascript",
    "commit": "2b7836d36c4f22f449b36ad9fd1fff2d14e9200d",
    "prompt": ""
}