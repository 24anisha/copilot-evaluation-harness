{
    "case_id": "case-1290",
    "repo_name": "yaml/pyyaml",
    "file_path": "examples/pygments-lexer/yaml.py",
    "code_snippet": "    return callback\n\n\n\ndef parse_block_scalar_indent(TokenClass):\n\n    \"\"\"Process indentation spaces in a block scalar.\"\"\"\n\n    def callback(lexer, match, context):\n\n        text = match.group()\n\n        if context.block_scalar_indent is None:\n\n            if len(text) <= max(context.indent, 0):\n\n                context.stack.pop()\n\n                context.stack.pop()\n\n                return\n\n            context.block_scalar_indent = len(text)\n\n        else:\n\n            if len(text) < context.block_scalar_indent:\n\n                context.stack.pop()\n\n                context.stack.pop()\n\n                return\n\n        if text:\n\n            yield match.start(), TokenClass, text\n\n            context.pos = match.end()\n\n    return callback\n",
    "line_range": [
        121,
        141
    ],
    "command_specific_fields": {
        "method_name": "parse_block_scalar_indent"
    },
    "language": "python",
    "commit": "a2d19c0234866dc9d4d55abf3009699c258bb72f",
    "prompt": ""
}