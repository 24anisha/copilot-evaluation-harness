{
    "case_id": "case-2219",
    "repo_name": "xuxueli/xxl-job",
    "file_path": "xxl-job-core/src/main/java/com/xxl/job/core/thread/JobLogFileCleanThread.java",
    "line_range": [
        29,
        105
    ],
    "command_specific_fields": {
        "method_name": "start"
    },
    "language": "java",
    "commit": "ae11b44dcae192be56d6fd4a5a6f8efa89e27072",
    "code_snippet": "    public void start(final long logRetentionDays){\n\n        // limit min value\n        if (logRetentionDays < 3 ) {\n            return;\n        }\n\n        localThread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                while (!toStop) {\n                    try {\n                        // clean log dir, over logRetentionDays\n                        File[] childDirs = new File(XxlJobFileAppender.getLogPath()).listFiles();\n                        if (childDirs!=null && childDirs.length>0) {\n\n                            // today\n                            Calendar todayCal = Calendar.getInstance();\n                            todayCal.set(Calendar.HOUR_OF_DAY,0);\n                            todayCal.set(Calendar.MINUTE,0);\n                            todayCal.set(Calendar.SECOND,0);\n                            todayCal.set(Calendar.MILLISECOND,0);\n\n                            Date todayDate = todayCal.getTime();\n\n                            for (File childFile: childDirs) {\n\n                                // valid\n                                if (!childFile.isDirectory()) {\n                                    continue;\n                                }\n                                if (childFile.getName().indexOf(\"-\") == -1) {\n                                    continue;\n                                }\n\n                                // file create date\n                                Date logFileCreateDate = null;\n                                try {\n                                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n                                    logFileCreateDate = simpleDateFormat.parse(childFile.getName());\n                                } catch (ParseException e) {\n                                    logger.error(e.getMessage(), e);\n                                }\n                                if (logFileCreateDate == null) {\n                                    continue;\n                                }\n\n                                if ((todayDate.getTime()-logFileCreateDate.getTime()) >= logRetentionDays * (24 * 60 * 60 * 1000) ) {\n                                    FileUtil.deleteRecursively(childFile);\n                                }\n\n                            }\n                        }\n\n                    } catch (Throwable e) {\n                        if (!toStop) {\n                            logger.error(e.getMessage(), e);\n                        }\n\n                    }\n\n                    try {\n                        TimeUnit.DAYS.sleep(1);\n                    } catch (Throwable e) {\n                        if (!toStop) {\n                            logger.error(e.getMessage(), e);\n                        }\n                    }\n                }\n                logger.info(\">>>>>>>>>>> xxl-job, executor JobLogFileCleanThread thread destroy.\");\n\n            }\n        });\n        localThread.setDaemon(true);\n        localThread.setName(\"xxl-job, executor JobLogFileCleanThread\");\n        localThread.start();\n    }\n"
}