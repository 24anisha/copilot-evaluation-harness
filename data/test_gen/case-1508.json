{
    "case_id": "case-1508",
    "repo_name": "benjaminp/six",
    "file_path": "six.py",
    "code_snippet": "\n\ndef python_2_unicode_compatible(klass):\n\n    \"\"\"\n\n    A class decorator that defines __unicode__ and __str__ methods under Python 2.\n\n    Under Python 3 it does nothing.\n\n\n\n    To support Python 2 and 3 with a single code base, define a __str__ method\n\n    returning text and apply this decorator to the class.\n\n    \"\"\"\n\n    if PY2:\n\n        if '__str__' not in klass.__dict__:\n\n            raise ValueError(\"@python_2_unicode_compatible cannot be applied \"\n\n                             \"to %s because it doesn't define __str__().\" %\n\n                             klass.__name__)\n\n        klass.__unicode__ = klass.__str__\n\n        klass.__str__ = lambda self: self.__unicode__().encode('utf-8')\n\n    return klass\n",
    "line_range": [
        956,
        973
    ],
    "command_specific_fields": {
        "method_name": "python_2_unicode_compatible"
    },
    "language": "python",
    "commit": "c1b416f24de52ebd8eaed3e379ab85ec9c3e935b",
    "prompt": ""
}