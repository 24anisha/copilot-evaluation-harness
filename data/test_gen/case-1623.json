{
    "case_id": "case-1623",
    "repo_name": "harelba/q",
    "file_path": "bin/q.py",
    "code_snippet": "\n\n    def get_from_qcatalog_using_table_name(self, temp_table_name):\n\n        xprint(\"getting from qcatalog using table name\")\n\n\n\n        field_names = [\"content_signature\", \"temp_table_name\",\"creation_time\",\"source_type\",\"source\",\"content_signature_key\",\"qcatalog_entry_id\"]\n\n\n\n        q = \"SELECT %s FROM %s where temp_table_name = ?\" % (\",\".join(field_names),self.QCATALOG_TABLE_NAME)\n\n        xprint(\"Query from qcatalog %s params %s\" % (q,str(temp_table_name,)))\n\n        r = self.execute_and_fetch(q,(temp_table_name,))\n\n        xprint(\"results: \",r.results)\n\n\n\n        if r is None:\n\n            return None\n\n\n\n        if len(r.results) == 0:\n\n            return None\n\n\n\n        if len(r.results) > 1:\n\n            raise Exception(\"Bug - Exactly one result should have been provided: %s\" % str(r.results))\n\n\n\n        d = dict(zip(field_names,r.results[0]))\n\n        # content_signature should be the first in the list of field_names\n\n        cs = OrderedDict(json.loads(r.results[0][0]))\n\n        if self.calculate_content_signature_key(cs) != d['content_signature_key']:\n\n            raise Exception('Table contains an invalid entry - content signature key is not matching the actual content signature')\n\n        return d\n",
    "line_range": [
        489,
        515
    ],
    "command_specific_fields": {
        "method_name": "get_from_qcatalog_using_table_name"
    },
    "language": "python",
    "commit": "03e8b395055747a45f8c12480fd4ed95c2b4e906",
    "prompt": ""
}