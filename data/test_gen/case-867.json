{
    "case_id": "case-867",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/applications/cli/learning.py",
    "code_snippet": "\n\n\n\ndef get_session() -> str:\n\n    \"\"\"\n\n    Retrieves or generates a unique identifier for the current user session.\n\n\n\n    This function attempts to read a unique user ID from a temporary file. If the file does not exist, it generates a new random ID, writes it to the file, and returns it. This ID is used to uniquely identify the user's session.\n\n\n\n    Returns\n\n    -------\n\n    str\n\n        A unique identifier for the user session.\n\n    \"\"\"\n\n    path = Path(tempfile.gettempdir()) / \"gpt_engineer_user_id.txt\"\n\n\n\n    try:\n\n        if path.exists():\n\n            user_id = path.read_text()\n\n        else:\n\n            # random uuid:\n\n            user_id = str(random.randint(0, 2**32))\n\n            path.write_text(user_id)\n\n        return user_id\n\n    except IOError:\n\n        return \"ephemeral_\" + str(random.randint(0, 2**32))\n",
    "line_range": [
        277,
        301
    ],
    "command_specific_fields": {
        "method_name": "get_session"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}