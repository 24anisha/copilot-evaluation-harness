{
    "case_id": "case-1739",
    "repo_name": "pallets/flask",
    "file_path": "src/flask/logging.py",
    "code_snippet": "\n\ndef create_logger(app: App) -> logging.Logger:\n\n    \"\"\"Get the Flask app's logger and configure it if needed.\n\n\n\n    The logger name will be the same as\n\n    :attr:`app.import_name <flask.Flask.name>`.\n\n\n\n    When :attr:`~flask.Flask.debug` is enabled, set the logger level to\n\n    :data:`logging.DEBUG` if it is not set.\n\n\n\n    If there is no handler for the logger's effective level, add a\n\n    :class:`~logging.StreamHandler` for\n\n    :func:`~flask.logging.wsgi_errors_stream` with a basic format.\n\n    \"\"\"\n\n    logger = logging.getLogger(app.name)\n\n\n\n    if app.debug and not logger.level:\n\n        logger.setLevel(logging.DEBUG)\n\n\n\n    if not has_level_handler(logger):\n\n        logger.addHandler(default_handler)\n\n\n\n    return logger\n",
    "line_range": [
        56,
        79
    ],
    "command_specific_fields": {
        "method_name": "create_logger"
    },
    "language": "python",
    "commit": "a8956feba1e40105e7bc78fa62ce36c58d1c91e1",
    "prompt": ""
}