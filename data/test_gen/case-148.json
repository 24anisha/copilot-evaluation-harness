{
    "case_id": "case-148",
    "repo_name": "tj/commander.js",
    "file_path": "lib/command.js",
    "code_snippet": "   * @private\n\n   */\n\n  _parseOptionsEnv() {\n\n    this.options.forEach((option) => {\n\n      if (option.envVar && option.envVar in process.env) {\n\n        const optionKey = option.attributeName();\n\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n\n        if (\n\n          this.getOptionValue(optionKey) === undefined ||\n\n          ['default', 'config', 'env'].includes(\n\n            this.getOptionValueSource(optionKey),\n\n          )\n\n        ) {\n\n          if (option.required || option.optional) {\n\n            // option can take a value\n\n            // keep very simple, optional always takes value\n\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n\n          } else {\n\n            // boolean\n\n            // keep very simple, only care that envVar defined and not the value\n\n            this.emit(`optionEnv:${option.name()}`);\n\n          }\n\n        }\n\n      }\n\n    });\n\n  }\n",
    "line_range": [
        1838,
        1863
    ],
    "command_specific_fields": {
        "method_name": "_parseOptionsEnv"
    },
    "language": "javascript",
    "commit": "970ecae402b253de691e6a9066fea22f38fe7431",
    "prompt": ""
}