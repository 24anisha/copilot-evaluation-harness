{
    "case_id": "case-253",
    "repo_name": "dthree/cash",
    "file_path": "src/commands/mkdir.js",
    "code_snippet": "\n\n  exec(args, options) {\n\n    const self = this;\n\n    let dirs = args || [];\n\n    options = options || {};\n\n\n\n    if (typeof dirs === 'string') {\n\n      dirs = dirs.split(' ');\n\n    }\n\n\n\n    dirs = dirs.filter(str => String(str).trim() !== '');\n\n\n\n    if (dirs.length < 1) {\n\n      this.log('mkdir: missing operand\\nTry \\'mkdir --help\\' for more information.');\n\n    }\n\n\n\n    dirs.forEach(function (dir) {\n\n      if (fs.existsSync(dir)) {\n\n        if (!options.parents) {\n\n          self.log(`mkdir: cannot create directory ${dir}: File exists`);\n\n        }\n\n        return;\n\n      }\n\n\n\n      // Base dir does not exist, and no -p option given\n\n      const baseDir = path.dirname(dir);\n\n      if (!fs.existsSync(baseDir) && !options.parents) {\n\n        self.log(`mkdir: cannot create directory ${dir}: No such file or directory`);\n\n        return;\n\n      }\n\n\n\n      if (options.parents) {\n\n        mkdirSyncRecursive.call(self, dir, options);\n\n      } else {\n\n        fs.mkdirSync(dir, parseInt('0777', 8));\n\n        if (options.verbose) {\n\n          self.log(`mkdir: created directory ${dir}`);\n\n        }\n\n      }\n\n    });\n\n    return 0;\n\n  }\n",
    "line_range": [
        10,
        52
    ],
    "command_specific_fields": {
        "method_name": "exec"
    },
    "language": "javascript",
    "commit": "3e28dae8bdb71215d5034df9003f3ef2804c2754",
    "prompt": ""
}