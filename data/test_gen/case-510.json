{
    "case_id": "case-510",
    "repo_name": "timc1/kbar",
    "file_path": "src/action/Command.ts",
    "code_snippet": "  };\n\n\n\n  constructor(\n\n    command: { perform: Command[\"perform\"] },\n\n    options: CommandOptions = {}\n\n  ) {\n\n    this.perform = () => {\n\n      const negate = command.perform();\n\n      // no need for history if non negatable\n\n      if (typeof negate !== \"function\") return;\n\n      // return if no history enabled\n\n      const history = options.history;\n\n      if (!history) return;\n\n      // since we are performing the same action, we'll clean up the\n\n      // previous call to the action and create a new history record\n\n      if (this.historyItem) {\n\n        history.remove(this.historyItem);\n\n      }\n\n      this.historyItem = history.add({\n\n        perform: command.perform,\n\n        negate,\n\n      });\n\n\n\n      this.history = {\n\n        undo: () => history.undo(this.historyItem),\n\n        redo: () => history.redo(this.historyItem),\n\n      };\n\n    };\n\n  }\n",
    "line_range": [
        15,
        43
    ],
    "command_specific_fields": {
        "method_name": "constructor"
    },
    "language": "typescript",
    "commit": "952d7c6badfe10c3b7b3bd46bbf42722ff03bfc8",
    "prompt": ""
}