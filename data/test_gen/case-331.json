{
    "case_id": "case-331",
    "repo_name": "expressjs/express",
    "file_path": "lib/application.js",
    "code_snippet": " */\n\n\n\napp.use = function use(fn) {\n\n  var offset = 0;\n\n  var path = '/';\n\n\n\n  // default path to '/'\n\n  // disambiguate app.use([fn])\n\n  if (typeof fn !== 'function') {\n\n    var arg = fn;\n\n\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n\n      arg = arg[0];\n\n    }\n\n\n\n    // first arg is the path\n\n    if (typeof arg !== 'function') {\n\n      offset = 1;\n\n      path = fn;\n\n    }\n\n  }\n\n\n\n  var fns = flatten(slice.call(arguments, offset));\n\n\n\n  if (fns.length === 0) {\n\n    throw new TypeError('app.use() requires a middleware function')\n\n  }\n\n\n\n  // setup router\n\n  this.lazyrouter();\n\n  var router = this._router;\n\n\n\n  fns.forEach(function (fn) {\n\n    // non-express app\n\n    if (!fn || !fn.handle || !fn.set) {\n\n      return router.use(path, fn);\n\n    }\n\n\n\n    debug('.use app under %s', path);\n\n    fn.mountpath = path;\n\n    fn.parent = this;\n\n\n\n    // restore .app property on req and res\n\n    router.use(path, function mounted_app(req, res, next) {\n\n      var orig = req.app;\n\n      fn.handle(req, res, function (err) {\n\n        setPrototypeOf(req, orig.request)\n\n        setPrototypeOf(res, orig.response)\n\n        next(err);\n\n      });\n\n    });\n\n\n\n    // mounted an app\n\n    fn.emit('mount', this);\n\n  }, this);\n\n\n\n  return this;\n\n};\n",
    "line_range": [
        192,
        249
    ],
    "command_specific_fields": {
        "method_name": "use"
    },
    "language": "javascript",
    "commit": "2177f67f5439494f7a29a8d04f744cc20fb9f201",
    "prompt": ""
}