{
    "case_id": "case-372",
    "repo_name": "dthree/cash",
    "file_path": "src/commands/unalias.js",
    "code_snippet": "const unalias = {\n\n  exec(args, options) {\n    args = args;\n    options = options || {};\n    const vorpal = options.vorpal;\n\n    if (!vorpal) {\n      /* istanbul ignore next */\n      throw new Error('Unalias is not programatically supported.');\n    }\n\n    vorpal._aliases = vorpal._aliases || [];\n\n    if (typeof args === 'string' || args instanceof String) {\n      args = String(args).split(' ');\n      args = args.filter(str => {\n        return String(str).trim() !== '';\n      });\n    }\n\n    // Validate no input with help.\n    if ((args === undefined || args.length < 1 || args === '') && !options.a) {\n      this.log('unalias: usage: unalias [-a] name [name ...]');\n      return 1;\n    }\n\n    // Pull list of aliases\n    let all;\n    try {\n      all = JSON.parse(vorpal.localStorage.getItem('aliases') || []);\n    } catch (e) {\n      /* istanbul ignore next */\n      all = [];\n      /* istanbul ignore next */\n      vorpal.localStorage.removeItem('aliases');\n    }\n\n    if (options.a) {\n      args = all;\n    }\n\n    // Remove each alias in the list.\n    for (let i = 0; i < args.length; ++i) {\n      const key = args[i];\n      const item = vorpal.localStorage.getItem(`alias|${key}`);\n      if (item !== undefined && item !== null) {\n        vorpal.localStorage.removeItem(`alias|${key}`);\n      } else {\n        this.log(`-cash: unalias: ${key}: not found`);\n      }\n      all = all.filter(str => {\n        return !(str === key);\n      });\n    }\n\n    // Rebuild alias lists.\n    const aliases = {};\n    /* istanbul ignore next */\n    for (let i = 0; i < all.length; ++i) {\n      const item = vorpal.localStorage.getItem(`alias|${all[i]}`);\n      if (item !== undefined && item !== null) {\n        aliases[all[i]] = item;\n      }\n    }\n    vorpal._aliases = aliases;\n\n    vorpal.localStorage.setItem('aliases', JSON.stringify(all));\n    return 0;\n  }\n",
    "line_range": [
        6,
        75
    ],
    "command_specific_fields": {
        "method_name": "exec"
    },
    "language": "javascript",
    "commit": "3e28dae8bdb71215d5034df9003f3ef2804c2754",
    "prompt": ""
}