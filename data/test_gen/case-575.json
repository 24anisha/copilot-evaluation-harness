{
    "case_id": "case-575",
    "repo_name": "peers/peerjs-server",
    "file_path": "src/instance.ts",
    "code_snippet": "\n\nexport const createInstance = ({\n\n\tapp,\n\n\tserver,\n\n\toptions,\n\n}: {\n\n\tapp: express.Application;\n\n\tserver: HttpServer | HttpsServer;\n\n\toptions: IConfig;\n\n}): void => {\n\n\tconst config = options;\n\n\tconst realm: IRealm = new Realm();\n\n\tconst messageHandler = new MessageHandler(realm);\n\n\n\n\tconst api = Api({ config, realm, corsOptions: options.corsOptions });\n\n\tconst messagesExpire: IMessagesExpire = new MessagesExpire({\n\n\t\trealm,\n\n\t\tconfig,\n\n\t\tmessageHandler,\n\n\t});\n\n\tconst checkBrokenConnections = new CheckBrokenConnections({\n\n\t\trealm,\n\n\t\tconfig,\n\n\t\tonClose: (client) => {\n\n\t\t\tapp.emit(\"disconnect\", client);\n\n\t\t},\n\n\t});\n\n\n\n\tapp.use(options.path, api);\n\n\n\n\t//use mountpath for WS server\n\n\tconst customConfig = {\n\n\t\t...config,\n\n\t\tpath: path.posix.join(app.path(), options.path, \"/\"),\n\n\t};\n\n\n\n\tconst wss: IWebSocketServer = new WebSocketServer({\n\n\t\tserver,\n\n\t\trealm,\n\n\t\tconfig: customConfig,\n\n\t});\n\n\n\n\twss.on(\"connection\", (client: IClient) => {\n\n\t\tconst messageQueue = realm.getMessageQueueById(client.getId());\n\n\n\n\t\tif (messageQueue) {\n\n\t\t\tlet message: IMessage | undefined;\n\n\n\n\t\t\twhile ((message = messageQueue.readMessage())) {\n\n\t\t\t\tmessageHandler.handle(client, message);\n\n\t\t\t}\n\n\t\t\trealm.clearMessageQueue(client.getId());\n\n\t\t}\n\n\n\n\t\tapp.emit(\"connection\", client);\n\n\t});\n\n\n\n\twss.on(\"message\", (client: IClient, message: IMessage) => {\n\n\t\tapp.emit(\"message\", client, message);\n\n\t\tmessageHandler.handle(client, message);\n\n\t});\n\n\n\n\twss.on(\"close\", (client: IClient) => {\n\n\t\tapp.emit(\"disconnect\", client);\n\n\t});\n\n\n\n\twss.on(\"error\", (error: Error) => {\n\n\t\tapp.emit(\"error\", error);\n\n\t});\n\n\n\n\tmessagesExpire.startMessagesExpiration();\n\n\tcheckBrokenConnections.start();\n\n};\n",
    "line_range": [
        27,
        100
    ],
    "command_specific_fields": {
        "method_name": "createInstance"
    },
    "language": "typescript",
    "commit": "aa4cdbac9cc28aac03c5054ef5b45e6fd6a1f5a3",
    "prompt": ""
}