{
    "case_id": "case-1003",
    "repo_name": "python-hyper/rfc3986",
    "file_path": "src/rfc3986/_mixin.py",
    "code_snippet": "\n\n    def authority_is_valid(self, require: bool = False) -> bool:\n\n        \"\"\"Determine if the authority component is valid.\n\n\n\n        .. deprecated:: 1.1.0\n\n\n\n            Use the :class:`~rfc3986.validators.Validator` object instead.\n\n\n\n        :param bool require:\n\n            Set to ``True`` to require the presence of this component.\n\n        :returns:\n\n            ``True`` if the authority is valid. ``False`` otherwise.\n\n        :rtype:\n\n            bool\n\n        \"\"\"\n\n        warnings.warn(\n\n            \"Please use rfc3986.validators.Validator instead. \"\n\n            \"This method will be eventually removed.\",\n\n            DeprecationWarning,\n\n        )\n\n        try:\n\n            self.authority_info()\n\n        except exc.InvalidAuthority:\n\n            return False\n\n\n\n        return validators.authority_is_valid(\n\n            self.authority,\n\n            host=self.host,\n\n            require=require,\n\n        )\n",
    "line_range": [
        156,
        186
    ],
    "command_specific_fields": {
        "method_name": "authority_is_valid"
    },
    "language": "python",
    "commit": "75e77baed146976442bb11d4adda0eb322c6a6b5",
    "prompt": ""
}