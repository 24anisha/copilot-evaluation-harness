{
    "case_id": "case-0",
    "repo_name": "boto/s3transfer",
    "file_path": "s3transfer/__init__.py",
    "code_snippet": "        try:\n            range_param = self._calculate_range_param(\n                part_size, part_index, num_parts\n            )\n\n            max_attempts = self._config.num_download_attempts\n            last_exception = None\n            for i in range(max_attempts):\n                try:\n                    logger.debug(\"Making get_object call.\")\n                    response = self._client.get_object(\n                        Bucket=bucket, Key=key, Range=range_param\n                    )\n                    streaming_body = StreamReaderProgress(\n                        response['Body'], callback\n                    )\n                    buffer_size = 1024 * 16\n                    current_index = part_size * part_index\n                    for chunk in iter(\n                        lambda: streaming_body.read(buffer_size), b''\n                    ):\n                        self._ioqueue.put((current_index, chunk))\n                        current_index += len(chunk)\n                    return\n                except (\n                    socket.timeout,\n                    OSError,\n                    ReadTimeoutError,\n                    IncompleteReadError,\n                    ResponseStreamingError,\n                ) as e:\n                    logger.debug(\n                        \"Retrying exception caught (%s), \"\n                        \"retrying request, (attempt %s / %s)\",\n                        e,\n                        i,\n                        max_attempts,\n                        exc_info=True,\n                    )\n                    last_exception = e\n                    continue\n            raise RetriesExceededError(last_exception)\n        finally:\n            logger.debug(\"EXITING _download_range for part: %s\", part_index)",
    "line_range": [
        594,
        642
    ],
    "command_specific_fields": {
        "method_name": "_download_range"
    },
    "language": "python",
    "commit": "da68b50bb5a6b0c342ad0d87f9b1f80ab81dffce",
    "prompt": ""
}