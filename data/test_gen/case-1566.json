{
    "case_id": "case-1566",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/extensions/autoreload.py",
    "code_snippet": "            raise ValueError(f'Unrecognized autoreload mode \"{mode}\".')\n\n\n\n    @line_magic\n\n    def aimport(self, parameter_s=\"\", stream=None):\n\n        \"\"\"%aimport => Import modules for automatic reloading.\n\n\n\n        %aimport\n\n        List modules to automatically import and not to import.\n\n\n\n        %aimport foo\n\n        Import module 'foo' and mark it to be autoreloaded for %autoreload explicit\n\n\n\n        %aimport foo, bar\n\n        Import modules 'foo', 'bar' and mark them to be autoreloaded for %autoreload explicit\n\n\n\n        %aimport -foo, bar\n\n        Mark module 'foo' to not be autoreloaded for %autoreload explicit, all, or complete, and 'bar'\n\n        to be autoreloaded for mode explicit.\n\n        \"\"\"\n\n        modname = parameter_s\n\n        if not modname:\n\n            to_reload = sorted(self._reloader.modules.keys())\n\n            to_skip = sorted(self._reloader.skip_modules.keys())\n\n            if stream is None:\n\n                stream = sys.stdout\n\n            if self._reloader.check_all:\n\n                stream.write(\"Modules to reload:\\nall-except-skipped\\n\")\n\n            else:\n\n                stream.write(\"Modules to reload:\\n%s\\n\" % \" \".join(to_reload))\n\n            stream.write(\"\\nModules to skip:\\n%s\\n\" % \" \".join(to_skip))\n\n        else:\n\n            for _module in [_.strip() for _ in modname.split(\",\")]:\n\n                if _module.startswith(\"-\"):\n\n                    _module = _module[1:].strip()\n\n                    self._reloader.mark_module_skipped(_module)\n\n                else:\n\n                    top_module, top_name = self._reloader.aimport_module(_module)\n\n\n\n                    # Inject module to user namespace\n\n                    self.shell.push({top_name: top_module})\n",
    "line_range": [
        663,
        702
    ],
    "command_specific_fields": {
        "method_name": "aimport"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}