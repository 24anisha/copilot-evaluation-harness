{
    "case_id": "case-1566",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/extensions/autoreload.py",
    "code_snippet": "                self._reloader._report = pl\n            else:\n                self._reloader._report = p\n        elif args.log is True:\n            self._reloader._report = l\n\n        self._reloader.hide_errors = args.hide_errors\n\n        if mode == \"\" or mode == \"now\":\n            self._reloader.check(True)\n        elif mode == \"0\" or mode == \"off\":\n            self._reloader.enabled = False\n        elif mode == \"1\" or mode == \"explicit\":\n            self._reloader.enabled = True\n            self._reloader.check_all = False\n            self._reloader.autoload_obj = False\n        elif mode == \"2\" or mode == \"all\":\n            self._reloader.enabled = True\n            self._reloader.check_all = True\n            self._reloader.autoload_obj = False\n        elif mode == \"3\" or mode == \"complete\":\n            self._reloader.enabled = True\n            self._reloader.check_all = True\n            self._reloader.autoload_obj = True\n        else:\n            raise ValueError(f'Unrecognized autoreload mode \"{mode}\".')\n\n    @line_magic\n    def aimport(self, parameter_s=\"\", stream=None):\n        \"\"\"%aimport => Import modules for automatic reloading.\n\n        %aimport\n        List modules to automatically import and not to import.\n\n        %aimport foo\n        Import module 'foo' and mark it to be autoreloaded for %autoreload explicit\n\n        %aimport foo, bar\n        Import modules 'foo', 'bar' and mark them to be autoreloaded for %autoreload explicit\n\n",
    "line_range": [
        663,
        702
    ],
    "command_specific_fields": {
        "method_name": "aimport"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}