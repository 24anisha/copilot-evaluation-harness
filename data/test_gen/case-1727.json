{
    "case_id": "case-1727",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/benchmark/benchmarks/mbpp/load.py",
    "code_snippet": "\n\n\n\ndef load_mbpp(config: MbppConfig) -> Benchmark:\n\n    \"\"\"\n\n    Loads the MBPP benchmark, which consists of a series coding problems.\n\n\n\n    Returns\n\n    -------\n\n    Benchmark\n\n        A Benchmark object containing a list of Task objects for the MBPP evaluation.\n\n    \"\"\"\n\n    dataset = _get_dataset()\n\n    tasks = []\n\n    problems = []\n\n    for dataset_type in [\"test\", \"train\"]:\n\n        problems += [\n\n            Problem(\n\n                source_file=problem[\"source_file\"],\n\n                task_id=problem[\"task_id\"],\n\n                prompt=problem[\"prompt\"],\n\n                code=problem[\"code\"],\n\n                test_imports=problem[\"test_imports\"],\n\n                test_list=problem[\"test_list\"],\n\n            )\n\n            for index, problem in enumerate(dataset[dataset_type])\n\n            if index < config.__getattribute__(dataset_type + \"_len\")\n\n        ]\n\n\n\n    for problem in problems:\n\n        prompt = Prompt(\n\n            problem.prompt\n\n            + \"Please extend given function without changing it's declaration including arguments.\"\n\n        )\n\n\n\n        tasks.append(\n\n            Task(\n\n                name=str(problem.task_id),\n\n                initial_code=FilesDict({\"main.py\": problem.starting_code}),\n\n                command=None,  # Explicitly setting `None` because each assertion runs code\n\n                prompt=prompt,\n\n                assertions={\n\n                    f\"correct assertion {i}\": MbppAssertion(\n\n                        assertion=assertion\n\n                    ).evaluate\n\n                    for i, assertion in enumerate(problem.test_list)\n\n                },\n\n            )\n\n        )\n\n\n\n    return Benchmark(\n\n        name=\"mbpp\",\n\n        tasks=tasks,\n\n    )\n",
    "line_range": [
        62,
        114
    ],
    "command_specific_fields": {
        "method_name": "load_mbpp"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}