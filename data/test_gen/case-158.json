{
    "case_id": "case-158",
    "repo_name": "dthree/cash",
    "file_path": "src/commands/mv.js",
    "code_snippet": "const mv = {\n\n\n\n  exec(args, options) {\n\n    const self = this;\n\n    options = options || {};\n\n\n\n    args = (args === undefined) ? [] : args;\n\n    args = (Array.isArray(args)) ? args : args.split(' ');\n\n    args = args.filter(arg => String(arg).trim() !== '');\n\n\n\n    options.noclobber = (options.force === true) ? false : options.noclobber;\n\n\n\n    if (args.length < 1) {\n\n      this.log('mv: missing file operand\\nTry \\'mv --help\\' for more information.');\n\n      return 1;\n\n    }\n\n\n\n    if (args.length === 1) {\n\n      this.log(`mv: missing destination file operand after ${args[0]}\\nTry 'mv --help' for more information.`);\n\n      return 1;\n\n    }\n\n\n\n    args = expand(args);\n\n\n\n    const dest = args.pop();\n\n    let sources = args;\n\n\n\n    const exists = fs.existsSync(dest);\n\n    const stats = exists && fs.statSync(dest);\n\n\n\n    // Dest is not existing dir, but multiple sources given\n\n    if ((!exists || !stats.isDirectory()) && sources.length > 1) {\n\n      this.log(`mv: target ${dest} is not a directory`);\n\n      return 1;\n\n    }\n\n\n\n    // Dest is an existing file, but no -f given\n\n    if (exists && stats.isFile() && options.noclobber) {\n\n      // just dont do anything\n\n      return 0;\n\n    }\n\n\n\n    if (options.striptrailingslashes) {\n\n      sources = sources.map(src => String(src).replace(/\\/$/g, ''));\n\n    }\n\n\n\n    sources.forEach(function (src) {\n\n      if (!fs.existsSync(src)) {\n\n        self.log(`mv: cannot stat ${src}: No such file or directory`);\n\n        return;\n\n      }\n\n\n\n      // When copying to '/path/dir', iDest = '/path/dir/file1'\n\n      let iDest = dest;\n\n      if (exists && stats.isDirectory()) {\n\n        iDest = path.normalize(`${dest}/${path.basename(src)}`);\n\n      }\n\n\n\n      // If the file exists and we're not clobbering, skip.\n\n      if (fs.existsSync(iDest) && options.noclobber) {\n\n        return;\n\n      }\n\n\n\n      if (path.resolve(src) === path.dirname(path.resolve(iDest))) {\n\n        self.log(`mv: ${src} and ${iDest} are the same file`);\n\n        return;\n\n      }\n\n\n\n      fs.renameSync(src, iDest);\n\n      if (options.verbose === true) {\n\n        self.log(String(`${src} -> ${iDest}`).replace(/\\\\/g, '/'));\n\n      }\n\n    });\n\n  }\n",
    "line_range": [
        11,
        84
    ],
    "command_specific_fields": {
        "method_name": "exec"
    },
    "language": "javascript",
    "commit": "3e28dae8bdb71215d5034df9003f3ef2804c2754",
    "prompt": ""
}