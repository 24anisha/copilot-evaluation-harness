{
    "case_id": "case-401",
    "repo_name": "purifycss/purifycss",
    "file_path": "lib/purifycss.js",
    "code_snippet": "\n\nfunction _addListener(target, type, listener, prepend) {\n\n  var m;\n\n  var events;\n\n  var existing;\n\n\n\n  if (typeof listener !== 'function')\n\n    throw new TypeError('\"listener\" argument must be a function');\n\n\n\n  events = target._events;\n\n  if (!events) {\n\n    events = target._events = new EventHandlers();\n\n    target._eventsCount = 0;\n\n  } else {\n\n    // To avoid recursion in the case that type === \"newListener\"! Before\n\n    // adding it to the listeners, first emit \"newListener\".\n\n    if (events.newListener) {\n\n      target.emit('newListener', type,\n\n                  listener.listener ? listener.listener : listener);\n\n\n\n      // Re-assign `events` because a newListener handler could have caused the\n\n      // this._events to be assigned to a new object\n\n      events = target._events;\n\n    }\n\n    existing = events[type];\n\n  }\n\n\n\n  if (!existing) {\n\n    // Optimize the case of one listener. Don't need the extra array object.\n\n    existing = events[type] = listener;\n\n    ++target._eventsCount;\n\n  } else {\n\n    if (typeof existing === 'function') {\n\n      // Adding the second element, need to change to array.\n\n      existing = events[type] = prepend ? [listener, existing] :\n\n                                          [existing, listener];\n\n    } else {\n\n      // If we've already got an array, just append.\n\n      if (prepend) {\n\n        existing.unshift(listener);\n\n      } else {\n\n        existing.push(listener);\n\n      }\n\n    }\n\n\n\n    // Check for listener leak\n\n    if (!existing.warned) {\n\n      m = $getMaxListeners(target);\n\n      if (m && m > 0 && existing.length > m) {\n\n        existing.warned = true;\n\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n\n                            existing.length + ' ' + type + ' listeners added. ' +\n\n                            'Use emitter.setMaxListeners() to increase limit');\n\n        w.name = 'MaxListenersExceededWarning';\n\n        w.emitter = target;\n\n        w.type = type;\n\n        w.count = existing.length;\n\n        emitWarning(w);\n\n      }\n\n    }\n\n  }\n\n\n\n  return target;\n\n}\n",
    "line_range": [
        194,
        258
    ],
    "command_specific_fields": {
        "method_name": "_addListener"
    },
    "language": "javascript",
    "commit": "be52c1c6b1b6e287b6989428c57f05a79aa135dc",
    "prompt": ""
}