{
    "case_id": "case-1030",
    "repo_name": "Zulko/moviepy",
    "file_path": "moviepy/tools.py",
    "code_snippet": "        convert_to_seconds('1:33,5')    # only minutes and secs\n        99.5\n        convert_to_seconds('33.5')      # only secs\n        33.5\n    \"\"\"\n    factors = (1, 60, 3600)\n\n    if isinstance(time, str):\n        time = [float(part.replace(\",\", \".\")) for part in time.split(\":\")]\n\n    if not isinstance(time, (tuple, list)):\n        return time\n\n    return sum(mult * part for mult, part in zip(factors, reversed(time)))\n\n\ndef deprecated_version_of(func, old_name):\n    \"\"\"Indicates that a function is deprecated and has a new name.\n\n    `func` is the new function and `old_name` is the name of the deprecated\n    function.\n\n    Returns\n    -------\n\n    deprecated_func\n      A function that does the same thing as `func`, but with a docstring\n      and a printed message on call which say that the function is\n      deprecated and that you should use `func` instead.\n\n    Examples\n    --------\n\n    .. code:: python\n\n        # The badly named method 'to_file' is replaced by 'write_file'\n        class Clip:\n            def write_file(self, some args):\n                # blablabla\n        Clip.to_file = deprecated_version_of(Clip.write_file, 'to_file')\n    \"\"\"\n    # Detect new name of func\n",
    "line_range": [
        84,
        125
    ],
    "command_specific_fields": {
        "method_name": "deprecated_version_of"
    },
    "language": "python",
    "commit": "0f6f6d4d9b96c69d109975549fe6293931f1a19d",
    "prompt": ""
}