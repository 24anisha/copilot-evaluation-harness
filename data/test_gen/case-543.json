{
    "case_id": "case-543",
    "repo_name": "peers/peerjs-server",
    "file_path": "src/messageHandler/index.ts",
    "code_snippet": "export class MessageHandler implements IMessageHandler {\n\n\tconstructor(\n\n\t\trealm: IRealm,\n\n\t\tprivate readonly handlersRegistry: IHandlersRegistry = new HandlersRegistry(),\n\n\t) {\n\n\t\tconst transmissionHandler: Handler = TransmissionHandler({ realm });\n\n\t\tconst heartbeatHandler: Handler = HeartbeatHandler;\n\n\n\n\t\tconst handleTransmission: Handler = (\n\n\t\t\tclient: IClient | undefined,\n\n\t\t\t{ type, src, dst, payload }: IMessage,\n\n\t\t): boolean => {\n\n\t\t\treturn transmissionHandler(client, {\n\n\t\t\t\ttype,\n\n\t\t\t\tsrc,\n\n\t\t\t\tdst,\n\n\t\t\t\tpayload,\n\n\t\t\t});\n\n\t\t};\n\n\n\n\t\tconst handleHeartbeat = (client: IClient | undefined, message: IMessage) =>\n\n\t\t\theartbeatHandler(client, message);\n\n\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.HEARTBEAT,\n\n\t\t\thandleHeartbeat,\n\n\t\t);\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.OFFER,\n\n\t\t\thandleTransmission,\n\n\t\t);\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.ANSWER,\n\n\t\t\thandleTransmission,\n\n\t\t);\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.CANDIDATE,\n\n\t\t\thandleTransmission,\n\n\t\t);\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.LEAVE,\n\n\t\t\thandleTransmission,\n\n\t\t);\n\n\t\tthis.handlersRegistry.registerHandler(\n\n\t\t\tMessageType.EXPIRE,\n\n\t\t\thandleTransmission,\n\n\t\t);\n\n\t}\n",
    "line_range": [
        13,
        61
    ],
    "command_specific_fields": {
        "method_name": "constructor"
    },
    "language": "typescript",
    "commit": "aa4cdbac9cc28aac03c5054ef5b45e6fd6a1f5a3",
    "prompt": ""
}