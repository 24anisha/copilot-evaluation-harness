{
    "case_id": "case-1430",
    "repo_name": "psf/requests",
    "file_path": "src/requests/sessions.py",
    "code_snippet": "                yield resp\n\n    def rebuild_auth(self, prepared_request, response):\n        \"\"\"When being redirected we may want to strip authentication from the\n        request to avoid leaking credentials. This method intelligently removes\n        and reapplies authentication where possible to avoid credential loss.\n        \"\"\"\n        headers = prepared_request.headers\n        url = prepared_request.url\n\n        if \"Authorization\" in headers and self.should_strip_auth(\n            response.request.url, url\n        ):\n            # If we get redirected to a new host, we should strip out any\n            # authentication headers.\n            del headers[\"Authorization\"]\n\n        # .netrc might have more auth for us on our new host.\n        new_auth = get_netrc_auth(url) if self.trust_env else None\n        if new_auth is not None:\n            prepared_request.prepare_auth(new_auth)\n",
    "line_range": [
        280,
        300
    ],
    "command_specific_fields": {
        "method_name": "rebuild_auth"
    },
    "language": "python",
    "commit": "79b74ef704dc0d804937c0d015c5e9c3b02b79bd",
    "prompt": ""
}