{
    "case_id": "case-0",
    "repo_name": "nock/nock",
    "file_path": "lib/recorder.js",
    "code_snippet": "{\n  // If we have headers and there is content-encoding it means that the body\n  // shouldn't be merged but instead persisted as an array of hex strings so\n  // that the response chunks can be mocked one by one.\n  if (headers && common.isContentEncoded(headers)) {\n    return {\n      body: chunks.map(chunk => chunk.toString('hex')),\n    }\n  }\n\n  const mergedBuffer = Buffer.concat(chunks)\n\n  // The merged buffer can be one of three things:\n  // 1. A UTF-8-representable string buffer which represents a JSON object.\n  // 2. A UTF-8-representable buffer which doesn't represent a JSON object.\n  // 3. A non-UTF-8-representable buffer which then has to be recorded as a hex string.\n  const isUtf8Representable = common.isUtf8Representable(mergedBuffer)\n  if (isUtf8Representable) {\n    const maybeStringifiedJson = mergedBuffer.toString('utf8')\n    try {\n      return {\n        isUtf8Representable,\n        body: JSON.parse(maybeStringifiedJson),\n      }\n    } catch (err) {\n      return {\n        isUtf8Representable,\n        body: maybeStringifiedJson,\n      }\n    }\n  } else {\n    return {\n      isUtf8Representable,\n      body: mergedBuffer.toString('hex'),\n    }\n  }\n}",
    "line_range": [
        21,
        59
    ],
    "command_specific_fields": {
        "method_name": "getBodyFromChunks"
    },
    "language": "javascript",
    "commit": "2b7836d36c4f22f449b36ad9fd1fff2d14e9200d",
    "prompt": ""
}