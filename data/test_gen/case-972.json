{
    "case_id": "case-972",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/core/magics/basic.py",
    "code_snippet": "            shell.inspector.set_active_scheme('NoColor')\n\n\n\n    @line_magic\n\n    def xmode(self, parameter_s=''):\n\n        \"\"\"Switch modes for the exception handlers.\n\n\n\n        Valid modes: Plain, Context, Verbose, and Minimal.\n\n\n\n        If called without arguments, acts as a toggle.\n\n\n\n        When in verbose mode the value `--show` (and `--hide`)\n\n        will respectively show (or hide) frames with ``__tracebackhide__ =\n\n        True`` value set.\n\n        \"\"\"\n\n\n\n        def xmode_switch_err(name):\n\n            warn('Error changing %s exception modes.\\n%s' %\n\n                 (name,sys.exc_info()[1]))\n\n\n\n        shell = self.shell\n\n        if parameter_s.strip() == \"--show\":\n\n            shell.InteractiveTB.skip_hidden = False\n\n            return\n\n        if parameter_s.strip() == \"--hide\":\n\n            shell.InteractiveTB.skip_hidden = True\n\n            return\n\n\n\n        new_mode = parameter_s.strip().capitalize()\n\n        try:\n\n            shell.InteractiveTB.set_mode(mode=new_mode)\n\n            print('Exception reporting mode:',shell.InteractiveTB.mode)\n\n        except:\n\n            xmode_switch_err('user')\n",
    "line_range": [
        366,
        398
    ],
    "command_specific_fields": {
        "method_name": "xmode"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}