{
    "case_id": "case-1035",
    "repo_name": "boto/s3transfer",
    "file_path": "s3transfer/manager.py",
    "code_snippet": "        return transfer_future\n\n\n\n    def _get_future_with_components(self, call_args):\n\n        transfer_id = self._id_counter\n\n        # Creates a new transfer future along with its components\n\n        transfer_coordinator = TransferCoordinator(transfer_id=transfer_id)\n\n        # Track the transfer coordinator for transfers to manage.\n\n        self._coordinator_controller.add_transfer_coordinator(\n\n            transfer_coordinator\n\n        )\n\n        # Also make sure that the transfer coordinator is removed once\n\n        # the transfer completes so it does not stick around in memory.\n\n        transfer_coordinator.add_done_callback(\n\n            self._coordinator_controller.remove_transfer_coordinator,\n\n            transfer_coordinator,\n\n        )\n\n        components = {\n\n            'meta': TransferMeta(call_args, transfer_id=transfer_id),\n\n            'coordinator': transfer_coordinator,\n\n        }\n\n        transfer_future = TransferFuture(**components)\n\n        return transfer_future, components\n",
    "line_range": [
        543,
        564
    ],
    "command_specific_fields": {
        "method_name": "_get_future_with_components"
    },
    "language": "python",
    "commit": "da68b50bb5a6b0c342ad0d87f9b1f80ab81dffce",
    "prompt": ""
}