{
    "case_id": "case-1538",
    "repo_name": "boto/s3transfer",
    "file_path": "s3transfer/download.py",
    "code_snippet": "\n\n    def _get_download_output_manager_cls(self, transfer_future, osutil):\n\n        \"\"\"Retrieves a class for managing output for a download\n\n\n\n        :type transfer_future: s3transfer.futures.TransferFuture\n\n        :param transfer_future: The transfer future for the request\n\n\n\n        :type osutil: s3transfer.utils.OSUtils\n\n        :param osutil: The os utility associated to the transfer\n\n\n\n        :rtype: class of DownloadOutputManager\n\n        :returns: The appropriate class to use for managing a specific type of\n\n            input for downloads.\n\n        \"\"\"\n\n        download_manager_resolver_chain = [\n\n            DownloadSpecialFilenameOutputManager,\n\n            DownloadFilenameOutputManager,\n\n            DownloadSeekableOutputManager,\n\n            DownloadNonSeekableOutputManager,\n\n        ]\n\n\n\n        fileobj = transfer_future.meta.call_args.fileobj\n\n        for download_manager_cls in download_manager_resolver_chain:\n\n            if download_manager_cls.is_compatible(fileobj, osutil):\n\n                return download_manager_cls\n\n        raise RuntimeError(\n\n            f'Output {fileobj} of type: {type(fileobj)} is not supported.'\n\n        )\n",
    "line_range": [
        283,
        311
    ],
    "command_specific_fields": {
        "method_name": "_get_download_output_manager_cls"
    },
    "language": "python",
    "commit": "da68b50bb5a6b0c342ad0d87f9b1f80ab81dffce",
    "prompt": ""
}