{
    "case_id": "case-724",
    "repo_name": "yaml/pyyaml",
    "file_path": "lib/yaml/composer.py",
    "code_snippet": "        return node\n\n    def compose_sequence_node(self, anchor):\n        start_event = self.get_event()\n        tag = start_event.tag\n        if tag is None or tag == '!':\n            tag = self.resolve(SequenceNode, None, start_event.implicit)\n        node = SequenceNode(tag, [],\n                start_event.start_mark, None,\n                flow_style=start_event.flow_style)\n        if anchor is not None:\n            self.anchors[anchor] = node\n        index = 0\n        while not self.check_event(SequenceEndEvent):\n            node.value.append(self.compose_node(node, index))\n            index += 1\n        end_event = self.get_event()\n        node.end_mark = end_event.end_mark\n        return node\n",
    "line_range": [
        97,
        115
    ],
    "command_specific_fields": {
        "method_name": "compose_sequence_node"
    },
    "language": "python",
    "commit": "a2d19c0234866dc9d4d55abf3009699c258bb72f",
    "prompt": ""
}