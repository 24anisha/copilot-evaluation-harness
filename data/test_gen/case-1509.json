{
    "case_id": "case-0",
    "repo_name": "boto/s3transfer",
    "file_path": "s3transfer/copies.py",
    "code_snippet": "        if transfer_future.meta.size is None:\n            \n            \n            \n            \n            \n            call_args = transfer_future.meta.call_args\n            head_object_request = (\n                self._get_head_object_request_from_copy_source(\n                    call_args.copy_source\n                )\n            )\n            extra_args = call_args.extra_args\n\n            \n            \n            for param, value in extra_args.items():\n                if param in self.EXTRA_ARGS_TO_HEAD_ARGS_MAPPING:\n                    head_object_request[\n                        self.EXTRA_ARGS_TO_HEAD_ARGS_MAPPING[param]\n                    ] = value\n\n            response = call_args.source_client.head_object(\n                **head_object_request\n            )\n            transfer_future.meta.provide_transfer_size(\n                response['ContentLength']\n            )\n\n        \n        \n        if transfer_future.meta.size < config.multipart_threshold:\n            self._submit_copy_request(\n                client, config, osutil, request_executor, transfer_future\n            )\n        else:\n            self._submit_multipart_request(\n                client, config, osutil, request_executor, transfer_future\n            )",
    "line_range": [
        78,
        140
    ],
    "command_specific_fields": {
        "method_name": "_submit"
    },
    "language": "python",
    "commit": "da68b50bb5a6b0c342ad0d87f9b1f80ab81dffce"
}