{
    "case_id": "case-1212",
    "repo_name": "cool-RR/PySnooper",
    "file_path": "pysnooper/tracer.py",
    "code_snippet": "        self._write(s)\n\n\n\n    def __enter__(self):\n\n        if DISABLED:\n\n            return\n\n        thread_global.__dict__.setdefault('depth', -1)\n\n        calling_frame = inspect.currentframe().f_back\n\n        if not self._is_internal_frame(calling_frame):\n\n            calling_frame.f_trace = self.trace\n\n            self.target_frames.add(calling_frame)\n\n\n\n        stack = self.thread_local.__dict__.setdefault(\n\n            'original_trace_functions', []\n\n        )\n\n        stack.append(sys.gettrace())\n\n        self.start_times[calling_frame] = datetime_module.datetime.now()\n\n        sys.settrace(self.trace)\n",
    "line_range": [
        338,
        354
    ],
    "command_specific_fields": {
        "method_name": "__enter__"
    },
    "language": "python",
    "commit": "f2c60de87f318a9c6b6c8b6887fe31bd07f91fb9",
    "prompt": ""
}