{
    "case_id": "case-1357",
    "repo_name": "google/yapf",
    "file_path": "yapf/pytree/comment_splicer.py",
    "code_snippet": "\n\n\n\ndef _AnnotateIndents(tree):\n\n  \"\"\"Annotate the tree with child_indent annotations.\n\n\n\n  A child_indent annotation on a node specifies the indentation (as a string,\n\n  like \"  \") of its children. It is inferred from the INDENT child of a node.\n\n\n\n  Arguments:\n\n    tree: root of a pytree. The pytree is modified to add annotations to nodes.\n\n\n\n  Raises:\n\n    RuntimeError: if the tree is malformed.\n\n  \"\"\"\n\n  # Annotate the root of the tree with zero indent.\n\n  if tree.parent is None:\n\n    pytree_utils.SetNodeAnnotation(tree, pytree_utils.Annotation.CHILD_INDENT,\n\n                                   '')\n\n  for child in tree.children:\n\n    if child.type == token.INDENT:\n\n      child_indent = pytree_utils.GetNodeAnnotation(\n\n          tree, pytree_utils.Annotation.CHILD_INDENT)\n\n      if child_indent is not None and child_indent != child.value:\n\n        raise RuntimeError('inconsistent indentation for child', (tree, child))\n\n      pytree_utils.SetNodeAnnotation(tree, pytree_utils.Annotation.CHILD_INDENT,\n\n                                     child.value)\n\n    _AnnotateIndents(child)\n",
    "line_range": [
        339,
        365
    ],
    "command_specific_fields": {
        "method_name": "_AnnotateIndents"
    },
    "language": "python",
    "commit": "1afbf7112ae61a467276c9401b3c113e6f676d0f",
    "prompt": ""
}