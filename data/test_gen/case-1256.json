{
    "case_id": "case-1256",
    "repo_name": "AUTOMATIC1111/stable-diffusion-webui",
    "file_path": "modules/textual_inversion/image_embedding.py",
    "code_snippet": "\n\ndef insert_image_data_embed(image, data):\n\n    d = 3\n\n    data_compressed = zlib.compress(json.dumps(data, cls=EmbeddingEncoder).encode(), level=9)\n\n    data_np_ = np.frombuffer(data_compressed, np.uint8).copy()\n\n    data_np_high = data_np_ >> 4\n\n    data_np_low = data_np_ & 0x0F\n\n\n\n    h = image.size[1]\n\n    next_size = data_np_low.shape[0] + (h-(data_np_low.shape[0] % h))\n\n    next_size = next_size + ((h*d)-(next_size % (h*d)))\n\n\n\n    data_np_low = np.resize(data_np_low, next_size)\n\n    data_np_low = data_np_low.reshape((h, -1, d))\n\n\n\n    data_np_high = np.resize(data_np_high, next_size)\n\n    data_np_high = data_np_high.reshape((h, -1, d))\n\n\n\n    edge_style = list(data['string_to_param'].values())[0].cpu().detach().numpy().tolist()[0][:1024]\n\n    edge_style = (np.abs(edge_style)/np.max(np.abs(edge_style))*255).astype(np.uint8)\n\n\n\n    data_np_low = style_block(data_np_low, sequence=edge_style)\n\n    data_np_low = xor_block(data_np_low)\n\n    data_np_high = style_block(data_np_high, sequence=edge_style[::-1])\n\n    data_np_high = xor_block(data_np_high)\n\n\n\n    im_low = Image.fromarray(data_np_low, mode='RGB')\n\n    im_high = Image.fromarray(data_np_high, mode='RGB')\n\n\n\n    background = Image.new('RGB', (image.size[0]+im_low.size[0]+im_high.size[0]+2, image.size[1]), (0, 0, 0))\n\n    background.paste(im_low, (0, 0))\n\n    background.paste(image, (im_low.size[0]+1, 0))\n\n    background.paste(im_high, (im_low.size[0]+1+image.size[0]+1, 0))\n\n\n\n    return background\n",
    "line_range": [
        70,
        105
    ],
    "command_specific_fields": {
        "method_name": "insert_image_data_embed"
    },
    "language": "python",
    "commit": "82a973c04367123ae98bd9abdf80d9eda9b910e2",
    "prompt": ""
}