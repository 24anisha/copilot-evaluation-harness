{
    "case_id": "case-102",
    "repo_name": "koajs/koa",
    "file_path": "lib/application.js",
    "code_snippet": "\n\nfunction respond (ctx) {\n\n  // allow bypassing koa\n\n  if (ctx.respond === false) return\n\n\n\n  if (!ctx.writable) return\n\n\n\n  const res = ctx.res\n\n  let body = ctx.body\n\n  const code = ctx.status\n\n\n\n  // ignore body\n\n  if (statuses.empty[code]) {\n\n    // strip headers\n\n    ctx.body = null\n\n    return res.end()\n\n  }\n\n\n\n  if (ctx.method === 'HEAD') {\n\n    if (!res.headersSent && !ctx.response.has('Content-Length')) {\n\n      const { length } = ctx.response\n\n      if (Number.isInteger(length)) ctx.length = length\n\n    }\n\n    return res.end()\n\n  }\n\n\n\n  // status body\n\n  if (body === null || body === undefined) {\n\n    if (ctx.response._explicitNullBody) {\n\n      ctx.response.remove('Content-Type')\n\n      ctx.response.remove('Transfer-Encoding')\n\n      ctx.length = 0\n\n      return res.end()\n\n    }\n\n    if (ctx.req.httpVersionMajor >= 2) {\n\n      body = String(code)\n\n    } else {\n\n      body = ctx.message || String(code)\n\n    }\n\n    if (!res.headersSent) {\n\n      ctx.type = 'text'\n\n      ctx.length = Buffer.byteLength(body)\n\n    }\n\n    return res.end(body)\n\n  }\n\n\n\n  // responses\n\n\n\n  if (Buffer.isBuffer(body)) return res.end(body)\n\n  if (typeof body === 'string') return res.end(body)\n\n  if (body instanceof Stream) return body.pipe(res)\n\n  if (body instanceof Blob) return Stream.Readable.from(body.stream()).pipe(res)\n\n  if (body instanceof ReadableStream) return Stream.Readable.from(body).pipe(res)\n\n  if (body instanceof Response) return Stream.Readable.from(body?.body).pipe(res)\n\n\n\n  // body: json\n\n  body = JSON.stringify(body)\n\n  if (!res.headersSent) {\n\n    ctx.length = Buffer.byteLength(body)\n\n  }\n\n  res.end(body)\n\n}\n",
    "line_range": [
        255,
        317
    ],
    "command_specific_fields": {
        "method_name": "respond"
    },
    "language": "javascript",
    "commit": "cfdb77f34d6f5aa4110c5425e78565165d51c0a7",
    "prompt": ""
}