{
    "case_id": "case-373",
    "repo_name": "pahen/madge",
    "file_path": "lib/tree.js",
    "code_snippet": "\t */\n\n\tgenerateTree(files) {\n\n\t\tconst depTree = {};\n\n\t\tconst visited = {};\n\n\t\tconst nonExistent = [];\n\n\t\tconst npmPaths = {};\n\n\t\tconst pathCache = {};\n\n\n\n\t\tfiles.forEach((file) => {\n\n\t\t\tif (visited[file]) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\n\n\t\t\tObject.assign(depTree, dependencyTree({\n\n\t\t\t\tfilename: file,\n\n\t\t\t\tdirectory: this.baseDir,\n\n\t\t\t\trequireConfig: this.config.requireConfig,\n\n\t\t\t\twebpackConfig: this.config.webpackConfig,\n\n\t\t\t\ttsConfig: this.config.tsConfig,\n\n\t\t\t\tvisited: visited,\n\n\t\t\t\tfilter: (dependencyFilePath, traversedFilePath) => {\n\n\t\t\t\t\tlet dependencyFilterRes = true;\n\n\t\t\t\t\tconst isNpmPath = this.isNpmPath(dependencyFilePath);\n\n\n\n\t\t\t\t\tif (this.isGitPath(dependencyFilePath)) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\tif (this.config.dependencyFilter) {\n\n\t\t\t\t\t\tdependencyFilterRes = this.config.dependencyFilter(dependencyFilePath, traversedFilePath, this.baseDir);\n\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\tif (this.config.includeNpm && isNpmPath) {\n\n\t\t\t\t\t\t(npmPaths[traversedFilePath] = npmPaths[traversedFilePath] || []).push(dependencyFilePath);\n\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\treturn !isNpmPath && (dependencyFilterRes || dependencyFilterRes === undefined);\n\n\t\t\t\t},\n\n\t\t\t\tdetective: this.config.detectiveOptions,\n\n\t\t\t\tnonExistent: nonExistent\n\n\t\t\t}));\n\n\t\t});\n\n\n\n\t\tlet tree = this.convertTree(depTree, {}, pathCache, npmPaths);\n\n\n\n\t\tfor (const npmKey in npmPaths) {\n\n\t\t\tconst id = this.processPath(npmKey, pathCache);\n\n\n\n\t\t\tnpmPaths[npmKey].forEach((npmPath) => {\n\n\t\t\t\ttree[id].push(this.processPath(npmPath, pathCache));\n\n\t\t\t});\n\n\t\t}\n\n\n\n\t\tif (this.config.excludeRegExp) {\n\n\t\t\ttree = this.exclude(tree, this.config.excludeRegExp);\n\n\t\t}\n\n\n\n\t\treturn {\n\n\t\t\ttree: this.sort(tree),\n\n\t\t\tskipped: nonExistent\n\n\t\t};\n\n\t}\n",
    "line_range": [
        107,
        169
    ],
    "command_specific_fields": {
        "method_name": "generateTree"
    },
    "language": "javascript",
    "commit": "6e0acb27b68b305b93b85d3fe82c4b11efa0a118",
    "prompt": ""
}