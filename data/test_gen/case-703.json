{
    "case_id": "case-703",
    "repo_name": "mitmproxy/mitmproxy",
    "file_path": "docs/src/examples/contrib/webscanner_helper/proxyauth_selenium.py",
    "code_snippet": "    # will also call response\n\n    @concurrent\n\n    def response(self, flow: mitmproxy.http.HTTPFlow):\n\n        if flow.response and (self.filter is None or self.filter(flow)):\n\n            if self.auth_oracle.is_unauthorized_response(flow):\n\n                self._login(flow)\n\n                new_flow = flow.copy()\n\n                if master and hasattr(master, \"commands\"):\n\n                    # cast necessary for mypy\n\n                    cast(Any, master).commands.call(\"replay.client\", [new_flow])\n\n                    count = 0\n\n                    while new_flow.response is None and count < 10:\n\n                        logger.error(\"waiting since \" + str(count) + \" ...\")\n\n                        count = count + 1\n\n                        time.sleep(1)\n\n                    if new_flow.response:\n\n                        flow.response = new_flow.response\n\n                else:\n\n                    logger.warning(\n\n                        \"Could not call 'replay.client' command since master was not initialized yet.\"\n\n                    )\n\n\n\n            if self.set_cookies and flow.response:\n\n                logger.debug(\"set set-cookie header for response\")\n\n                self._set_set_cookie_headers(flow)\n\n                self.set_cookies = False\n",
    "line_range": [
        85,
        111
    ],
    "command_specific_fields": {
        "method_name": "response"
    },
    "language": "python",
    "commit": "b08acf4ab8d51405563123793e644c0c2aa52c6e",
    "prompt": ""
}