{
    "case_id": "case-1513",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/core/default/disk_memory.py",
    "code_snippet": "            return default\n\n\n\n    def __setitem__(self, key: Union[str, Path], val: str) -> None:\n\n        \"\"\"\n\n        Set or update the content of a file in the database corresponding to the given key.\n\n\n\n        Parameters\n\n        ----------\n\n        key : str or Path\n\n            The key (filename) where the content is to be set.\n\n        val : str\n\n            The content to be written to the file.\n\n\n\n        Raises\n\n        ------\n\n        ValueError\n\n            If the key attempts to access a parent path.\n\n        TypeError\n\n            If the value is not a string.\n\n\n\n        \"\"\"\n\n        if str(key).startswith(\"../\"):\n\n            raise ValueError(f\"File name {key} attempted to access parent path.\")\n\n\n\n        if not isinstance(val, str):\n\n            raise TypeError(\"val must be str\")\n\n\n\n        full_path = self.path / key\n\n        full_path.parent.mkdir(parents=True, exist_ok=True)\n\n\n\n        full_path.write_text(val, encoding=\"utf-8\")\n",
    "line_range": [
        142,
        172
    ],
    "command_specific_fields": {
        "method_name": "__setitem__"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}