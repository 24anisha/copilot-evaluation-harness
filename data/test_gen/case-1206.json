{
    "case_id": "case-1206",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/core/display.py",
    "code_snippet": "            msg = ''.join([\n                \"To embed videos, you must pass embed=True \",\n                \"(this may make your notebook files huge)\\n\",\n                \"Consider passing Video(url='...')\",\n            ])\n            raise ValueError(msg)\n\n        self.mimetype = mimetype\n        self.embed = embed\n        self.width = width\n        self.height = height\n        self.html_attributes = html_attributes\n        super(Video, self).__init__(data=data, url=url, filename=filename)\n\n    def _repr_html_(self):\n        width = height = ''\n        if self.width:\n            width = ' width=\"%d\"' % self.width\n        if self.height:\n            height = ' height=\"%d\"' % self.height\n\n        # External URLs and potentially local files are not embedded into the\n        # notebook output.\n        if not self.embed:\n            url = self.url if self.url is not None else self.filename\n            output = \"\"\"<video src=\"{0}\" {1} {2} {3}>\n      Your browser does not support the <code>video</code> element.\n    </video>\"\"\".format(url, self.html_attributes, width, height)\n            return output\n\n        # Embedded videos are base64-encoded.\n        mimetype = self.mimetype\n        if self.filename is not None:\n            if not mimetype:\n                mimetype, _ = mimetypes.guess_type(self.filename)\n\n            with open(self.filename, 'rb') as f:\n                video = f.read()\n        else:\n",
    "line_range": [
        1212,
        1250
    ],
    "command_specific_fields": {
        "method_name": "set_matplotlib_formats"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}