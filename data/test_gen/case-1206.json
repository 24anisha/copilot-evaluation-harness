{
    "case_id": "case-1206",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/core/display.py",
    "code_snippet": "\n\n@skip_doctest\n\ndef set_matplotlib_formats(*formats, **kwargs):\n\n    \"\"\"\n\n    .. deprecated:: 7.23\n\n\n\n       use `matplotlib_inline.backend_inline.set_matplotlib_formats()`\n\n\n\n    Select figure formats for the inline backend. Optionally pass quality for JPEG.\n\n\n\n    For example, this enables PNG and JPEG output with a JPEG quality of 90%::\n\n\n\n        In [1]: set_matplotlib_formats('png', 'jpeg', quality=90)\n\n\n\n    To set this in your config files use the following::\n\n\n\n        c.InlineBackend.figure_formats = {'png', 'jpeg'}\n\n        c.InlineBackend.print_figure_kwargs.update({'quality' : 90})\n\n\n\n    Parameters\n\n    ----------\n\n    *formats : strs\n\n        One or more figure formats to enable: 'png', 'retina', 'jpeg', 'svg', 'pdf'.\n\n    **kwargs\n\n        Keyword args will be relayed to ``figure.canvas.print_figure``.\n\n    \"\"\"\n\n    warnings.warn(\n\n        \"`set_matplotlib_formats` is deprecated since IPython 7.23, directly \"\n\n        \"use `matplotlib_inline.backend_inline.set_matplotlib_formats()`\",\n\n        DeprecationWarning,\n\n        stacklevel=2,\n\n    )\n\n\n\n    from matplotlib_inline.backend_inline import (\n\n        set_matplotlib_formats as set_matplotlib_formats_orig,\n\n    )\n\n\n\n    set_matplotlib_formats_orig(*formats, **kwargs)\n",
    "line_range": [
        1212,
        1250
    ],
    "command_specific_fields": {
        "method_name": "set_matplotlib_formats"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}