{
    "case_id": "case-1005",
    "repo_name": "maurosoria/dirsearch",
    "file_path": "lib/controller/controller.py",
    "code_snippet": "\n\n    def match_callback(self, response):\n\n        if response.status in options[\"skip_on_status\"]:\n\n            raise SkipTargetInterrupt(\n\n                f\"Skipped the target due to {response.status} status code\"\n\n            )\n\n\n\n        interface.status_report(response, options[\"full_url\"])\n\n\n\n        if response.status in options[\"recursion_status_codes\"] and any(\n\n            (\n\n                options[\"recursive\"],\n\n                options[\"deep_recursive\"],\n\n                options[\"force_recursive\"],\n\n            )\n\n        ):\n\n            if response.redirect:\n\n                new_path = clean_path(parse_path(response.redirect))\n\n                added_to_queue = self.recur_for_redirect(response.path, new_path)\n\n            elif len(response.history):\n\n                old_path = clean_path(parse_path(response.history[0]))\n\n                added_to_queue = self.recur_for_redirect(old_path, response.path)\n\n            else:\n\n                added_to_queue = self.recur(response.path)\n\n\n\n            if added_to_queue:\n\n                interface.new_directories(added_to_queue)\n\n\n\n        if options[\"replay_proxy\"]:\n\n            # Replay the request with new proxy\n\n            self.requester.request(response.full_path, proxy=options[\"replay_proxy\"])\n\n\n\n        if self.report:\n\n            self.results.append(response)\n\n            self.report.save(self.results)\n",
    "line_range": [
        435,
        470
    ],
    "command_specific_fields": {
        "method_name": "match_callback"
    },
    "language": "python",
    "commit": "59bc9ce43063a1036cf0077f2f1e68883397dac4",
    "prompt": ""
}