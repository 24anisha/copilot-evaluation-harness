{
    "case_id": "case-349",
    "repo_name": "conventional-changelog/standard-version",
    "file_path": "lib/lifecycles/bump.js",
    "code_snippet": " * @return void\n\n */\n\nfunction updateConfigs (args, newVersion) {\n\n  const dotgit = DotGitignore()\n\n  args.bumpFiles.forEach(function (bumpFile) {\n\n    const updater = resolveUpdaterObjectFromArgument(bumpFile)\n\n    if (!updater) {\n\n      return\n\n    }\n\n    const configPath = path.resolve(process.cwd(), updater.filename)\n\n    try {\n\n      if (dotgit.ignore(configPath)) return\n\n      const stat = fs.lstatSync(configPath)\n\n\n\n      if (!stat.isFile()) return\n\n      const contents = fs.readFileSync(configPath, 'utf8')\n\n      checkpoint(\n\n        args,\n\n        'bumping version in ' + updater.filename + ' from %s to %s',\n\n        [updater.updater.readVersion(contents), newVersion]\n\n      )\n\n      writeFile(\n\n        args,\n\n        configPath,\n\n        updater.updater.writeVersion(contents, newVersion)\n\n      )\n\n      // flag any config files that we modify the version # for\n\n      // as having been updated.\n\n      configsToUpdate[updater.filename] = true\n\n    } catch (err) {\n\n      if (err.code !== 'ENOENT') console.warn(err.message)\n\n    }\n\n  })\n\n}\n",
    "line_range": [
        137,
        170
    ],
    "command_specific_fields": {
        "method_name": "updateConfigs"
    },
    "language": "javascript",
    "commit": "d70752c463991d34fa192e0332d7e4efacad78ba",
    "prompt": ""
}