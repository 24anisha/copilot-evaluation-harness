{
    "case_id": "case-587",
    "repo_name": "kelektiv/node-cron",
    "file_path": "src/job.ts",
    "code_snippet": "\n\n\tprivate _fnWrap(cmd: CronCommand<C, boolean>): CronCallback<C, boolean> {\n\n\t\tswitch (typeof cmd) {\n\n\t\t\tcase 'function': {\n\n\t\t\t\treturn cmd;\n\n\t\t\t}\n\n\n\n\t\t\tcase 'string': {\n\n\t\t\t\tconst [command, ...args] = cmd.split(' ');\n\n\n\n\t\t\t\treturn spawn.bind(undefined, command ?? cmd, args, {}) as () => void;\n\n\t\t\t}\n\n\n\n\t\t\tcase 'object': {\n\n\t\t\t\treturn spawn.bind(\n\n\t\t\t\t\tundefined,\n\n\t\t\t\t\tcmd.command,\n\n\t\t\t\t\tcmd.args ?? [],\n\n\t\t\t\t\tcmd.options ?? {}\n\n\t\t\t\t) as () => void;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n",
    "line_range": [
        147,
        170
    ],
    "command_specific_fields": {
        "method_name": "_fnWrap"
    },
    "language": "typescript",
    "commit": "1eb978b8cddf8a2f2bead841adcad408238333c6",
    "prompt": ""
}