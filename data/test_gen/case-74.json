{
    "case_id": "case-74",
    "repo_name": "expressjs/express",
    "file_path": "lib/application.js",
    "code_snippet": "\n\napp.render = function render(name, options, callback) {\n\n  var cache = this.cache;\n\n  var done = callback;\n\n  var engines = this.engines;\n\n  var opts = options;\n\n  var renderOptions = {};\n\n  var view;\n\n\n\n  // support callback function as second arg\n\n  if (typeof options === 'function') {\n\n    done = options;\n\n    opts = {};\n\n  }\n\n\n\n  // merge app.locals\n\n  merge(renderOptions, this.locals);\n\n\n\n  // merge options._locals\n\n  if (opts._locals) {\n\n    merge(renderOptions, opts._locals);\n\n  }\n\n\n\n  // merge options\n\n  merge(renderOptions, opts);\n\n\n\n  // set .cache unless explicitly provided\n\n  if (renderOptions.cache == null) {\n\n    renderOptions.cache = this.enabled('view cache');\n\n  }\n\n\n\n  // primed cache\n\n  if (renderOptions.cache) {\n\n    view = cache[name];\n\n  }\n\n\n\n  // view\n\n  if (!view) {\n\n    var View = this.get('view');\n\n\n\n    view = new View(name, {\n\n      defaultEngine: this.get('view engine'),\n\n      root: this.get('views'),\n\n      engines: engines\n\n    });\n\n\n\n    if (!view.path) {\n\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n\n        : 'directory \"' + view.root + '\"'\n\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n\n      err.view = view;\n\n      return done(err);\n\n    }\n\n\n\n    // prime the cache\n\n    if (renderOptions.cache) {\n\n      cache[name] = view;\n\n    }\n\n  }\n\n\n\n  // render\n\n  tryRender(view, renderOptions, done);\n\n};\n",
    "line_range": [
        546,
        610
    ],
    "command_specific_fields": {
        "method_name": "render"
    },
    "language": "javascript",
    "commit": "2177f67f5439494f7a29a8d04f744cc20fb9f201",
    "prompt": ""
}