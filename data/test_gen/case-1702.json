{
    "case_id": "case-1702",
    "repo_name": "python-hyper/rfc3986",
    "file_path": "src/rfc3986/parseresult.py",
    "code_snippet": "\n\n    @classmethod\n\n    def from_parts(\n\n        cls,\n\n        scheme: t.Optional[str] = None,\n\n        userinfo: t.Optional[str] = None,\n\n        host: t.Optional[str] = None,\n\n        port: t.Optional[t.Union[int, str]] = None,\n\n        path: t.Optional[str] = None,\n\n        query: t.Optional[str] = None,\n\n        fragment: t.Optional[str] = None,\n\n        encoding: str = \"utf-8\",\n\n        lazy_normalize: bool = True,\n\n    ) -> _Self:\n\n        \"\"\"Create a ParseResult instance from its parts.\"\"\"\n\n        authority = \"\"\n\n        if userinfo is not None:\n\n            authority += userinfo + \"@\"\n\n        if host is not None:\n\n            authority += host\n\n        if port is not None:\n\n            authority += f\":{int(port)}\"\n\n        uri_ref = uri.URIReference(\n\n            scheme=scheme,\n\n            authority=authority,\n\n            path=path,\n\n            query=query,\n\n            fragment=fragment,\n\n            encoding=encoding,\n\n        )\n\n        if not lazy_normalize:\n\n            uri_ref = uri_ref.normalize()\n\n        to_bytes = compat.to_bytes\n\n        userinfo, host, port = authority_from(uri_ref, strict=True)\n\n        return cls(\n\n            scheme=to_bytes(scheme, encoding),\n\n            userinfo=to_bytes(userinfo, encoding),\n\n            host=to_bytes(host, encoding),\n\n            port=port,\n\n            path=to_bytes(path, encoding),\n\n            query=to_bytes(query, encoding),\n\n            fragment=to_bytes(fragment, encoding),\n\n            uri_ref=uri_ref,\n\n            encoding=encoding,\n\n            lazy_normalize=lazy_normalize,\n\n        )\n",
    "line_range": [
        321,
        367
    ],
    "command_specific_fields": {
        "method_name": "from_parts"
    },
    "language": "python",
    "commit": "75e77baed146976442bb11d4adda0eb322c6a6b5",
    "prompt": ""
}