{
    "case_id": "case-419",
    "repo_name": "expressjs/morgan",
    "file_path": "index.js",
    "code_snippet": " */\n\n\n\nfunction morgan (format, options) {\n\n  var fmt = format\n\n  var opts = options || {}\n\n\n\n  if (format && typeof format === 'object') {\n\n    opts = format\n\n    fmt = opts.format || 'default'\n\n\n\n    // smart deprecation message\n\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\n\n  }\n\n\n\n  if (fmt === undefined) {\n\n    deprecate('undefined format: specify a format')\n\n  }\n\n\n\n  // output on request instead of response\n\n  var immediate = opts.immediate\n\n\n\n  // check if log entry should be skipped\n\n  var skip = opts.skip || false\n\n\n\n  // format function\n\n  var formatLine = typeof fmt !== 'function'\n\n    ? getFormatFunction(fmt)\n\n    : fmt\n\n\n\n  // stream\n\n  var buffer = opts.buffer\n\n  var stream = opts.stream || process.stdout\n\n\n\n  // buffering support\n\n  if (buffer) {\n\n    deprecate('buffer option')\n\n\n\n    // flush interval\n\n    var interval = typeof buffer !== 'number'\n\n      ? DEFAULT_BUFFER_DURATION\n\n      : buffer\n\n\n\n    // swap the stream\n\n    stream = createBufferStream(stream, interval)\n\n  }\n\n\n\n  return function logger (req, res, next) {\n\n    // request data\n\n    req._startAt = undefined\n\n    req._startTime = undefined\n\n    req._remoteAddress = getip(req)\n\n\n\n    // response data\n\n    res._startAt = undefined\n\n    res._startTime = undefined\n\n\n\n    // record request start\n\n    recordStartTime.call(req)\n\n\n\n    function logRequest () {\n\n      if (skip !== false && skip(req, res)) {\n\n        debug('skip request')\n\n        return\n\n      }\n\n\n\n      var line = formatLine(morgan, req, res)\n\n\n\n      if (line == null) {\n\n        debug('skip line')\n\n        return\n\n      }\n\n\n\n      debug('log request')\n\n      stream.write(line + '\\n')\n\n    };\n\n\n\n    if (immediate) {\n\n      // immediate log\n\n      logRequest()\n\n    } else {\n\n      // record response start\n\n      onHeaders(res, recordStartTime)\n\n\n\n      // log when response finished\n\n      onFinished(res, logRequest)\n\n    }\n\n\n\n    next()\n\n  }\n\n}\n",
    "line_range": [
        57,
        146
    ],
    "command_specific_fields": {
        "method_name": "morgan"
    },
    "language": "javascript",
    "commit": "efd6bff1adae9418f12a8827614336c72e2c4300",
    "prompt": ""
}