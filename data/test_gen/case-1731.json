{
    "case_id": "case-1731",
    "repo_name": "coleifer/peewee",
    "file_path": "peewee.py",
    "code_snippet": "\n\n    def __sql__(self, ctx):\n\n        if ctx.scope != SCOPE_SOURCE and not self._inline:\n\n            ctx.literal(self._alias)\n\n            ctx.literal(' AS ')\n\n\n\n        with ctx(parentheses=True):\n\n            parts = []\n\n            if self._extends is not None:\n\n                ext = self._extends\n\n                if isinstance(ext, Window):\n\n                    ext = SQL(ext._alias)\n\n                elif isinstance(ext, basestring):\n\n                    ext = SQL(ext)\n\n                parts.append(ext)\n\n            if self.partition_by:\n\n                parts.extend((\n\n                    SQL('PARTITION BY'),\n\n                    CommaNodeList(self.partition_by)))\n\n            if self.order_by:\n\n                parts.extend((\n\n                    SQL('ORDER BY'),\n\n                    CommaNodeList(self.order_by)))\n\n            if self.start is not None and self.end is not None:\n\n                frame = self.frame_type or 'ROWS'\n\n                parts.extend((\n\n                    SQL('%s BETWEEN' % frame),\n\n                    self.start,\n\n                    SQL('AND'),\n\n                    self.end))\n\n            elif self.start is not None:\n\n                parts.extend((SQL(self.frame_type or 'ROWS'), self.start))\n\n            elif self.frame_type is not None:\n\n                parts.append(SQL('%s UNBOUNDED PRECEDING' % self.frame_type))\n\n            if self._exclude is not None:\n\n                parts.extend((SQL('EXCLUDE'), self._exclude))\n\n            ctx.sql(NodeList(parts))\n\n        return ctx\n",
    "line_range": [
        1777,
        1815
    ],
    "command_specific_fields": {
        "method_name": "__sql__"
    },
    "language": "python",
    "commit": "73065214abdff535154bb9399f241dc75248fb14",
    "prompt": ""
}