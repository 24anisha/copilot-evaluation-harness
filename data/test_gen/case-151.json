{
    "case_id": "case-151",
    "repo_name": "kefranabg/readme-md-generator",
    "file_path": "src/project-infos.js",
    "code_snippet": " */\n\nconst getProjectInfos = async () => {\n\n  const spinner = ora('Gathering project infos').start()\n\n\n\n  const packageJson = await getPackageJson()\n\n  const isJSProject = !!packageJson\n\n  const packageManager = isJSProject\n\n    ? getPackageManagerFromLockFile()\n\n    : undefined\n\n  const name = getProjectName(packageJson)\n\n  const description = get(packageJson, 'description', undefined)\n\n  const engines = get(packageJson, 'engines', undefined)\n\n  const author = getAuthorName(packageJson)\n\n  const version = get(packageJson, 'version', undefined)\n\n  const licenseName = get(packageJson, 'license', undefined)\n\n  const homepage = get(packageJson, 'homepage', undefined)\n\n  const hasStartCommand = has(packageJson, 'scripts.start')\n\n  const hasTestCommand = has(packageJson, 'scripts.test')\n\n  const repositoryUrl = await getReposUrl(packageJson)\n\n  const issuesUrl = await getReposIssuesUrl(packageJson)\n\n  const isGithubRepos = isGithubRepository(repositoryUrl)\n\n  const contributingUrl = repositoryUrl\n\n    ? getContributingUrlFromRepositoryUrl(repositoryUrl)\n\n    : undefined\n\n  const documentationUrl = isGithubRepos\n\n    ? getReadmeUrlFromGithubRepositoryUrl(repositoryUrl)\n\n    : undefined\n\n  const githubUsername = isGithubRepos\n\n    ? getGithubUsernameFromRepositoryUrl(repositoryUrl)\n\n    : undefined\n\n  const authorWebsite = githubUsername\n\n    ? await getAuthorWebsiteFromGithubAPI(githubUsername)\n\n    : undefined\n\n  const licenseUrl = isGithubRepos\n\n    ? getLicenseUrlFromGithubRepositoryUrl(repositoryUrl)\n\n    : undefined\n\n\n\n  spinner.succeed('Project infos gathered')\n\n\n\n  return {\n\n    name,\n\n    description,\n\n    version,\n\n    author,\n\n    authorWebsite,\n\n    homepage,\n\n    repositoryUrl,\n\n    issuesUrl,\n\n    contributingUrl,\n\n    githubUsername,\n\n    engines,\n\n    licenseName,\n\n    licenseUrl,\n\n    documentationUrl,\n\n    isGithubRepos,\n\n    hasStartCommand,\n\n    hasTestCommand,\n\n    isJSProject,\n\n    packageManager\n\n  }\n\n}\n",
    "line_range": [
        125,
        186
    ],
    "command_specific_fields": {
        "method_name": "getProjectInfos"
    },
    "language": "javascript",
    "commit": "f0370c8efe602bfc1e1334ea556214de4c1b0f04",
    "prompt": ""
}