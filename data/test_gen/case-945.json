{
    "case_id": "case-945",
    "repo_name": "lra/mackup",
    "file_path": "mackup/utils.py",
    "code_snippet": "\n\ndef chmod(target):\n\n    \"\"\"\n\n    Recursively set the chmod for files to 0600 and 0700 for folders.\n\n\n\n    It's ok unless we need something more specific.\n\n\n\n    Args:\n\n        target (str): Root file or folder\n\n    \"\"\"\n\n    assert isinstance(target, str)\n\n    assert os.path.exists(target)\n\n\n\n    file_mode = stat.S_IRUSR | stat.S_IWUSR\n\n    folder_mode = stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR\n\n\n\n    # Remove the immutable attribute recursively if there is one\n\n    remove_immutable_attribute(target)\n\n\n\n    if os.path.isfile(target):\n\n        os.chmod(target, file_mode)\n\n\n\n    elif os.path.isdir(target):\n\n        # chmod the root item\n\n        os.chmod(target, folder_mode)\n\n\n\n        # chmod recursively in the folder it it's one\n\n        for root, dirs, files in os.walk(target):\n\n            for cur_dir in dirs:\n\n                os.chmod(os.path.join(root, cur_dir), folder_mode)\n\n            for cur_file in files:\n\n                os.chmod(os.path.join(root, cur_file), file_mode)\n\n\n\n    else:\n\n        raise ValueError(\"Unsupported file type: {}\".format(target))\n",
    "line_range": [
        146,
        181
    ],
    "command_specific_fields": {
        "method_name": "chmod"
    },
    "language": "python",
    "commit": "0def08b8543ac3a436257cce4426a5b109b31a2d",
    "prompt": ""
}