{
    "case_id": "case-1238",
    "repo_name": "dbcli/mycli",
    "file_path": "mycli/clistyle.py",
    "code_snippet": "\ndef style_factory(name, cli_style):\n    try:\n        style = pygments.styles.get_style_by_name(name)\n    except ClassNotFound:\n        style = pygments.styles.get_style_by_name(\"native\")\n\n    prompt_styles = []\n    # prompt-toolkit used pygments tokens for styling before, switched to style\n    # names in 2.0. Convert old token types to new style names, for backwards compatibility.\n    for token in cli_style:\n        if token.startswith(\"Token.\"):\n            # treat as pygments token (1.0)\n            token_type, style_value = parse_pygments_style(token, style, cli_style)\n            if token_type in TOKEN_TO_PROMPT_STYLE:\n                prompt_style = TOKEN_TO_PROMPT_STYLE[token_type]\n                prompt_styles.append((prompt_style, style_value))\n            else:\n                # we don't want to support tokens anymore\n                logger.error(\"Unhandled style / class name: %s\", token)\n        else:\n            # treat as prompt style name (2.0). See default style names here:\n            # https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/prompt_toolkit/styles/defaults.py\n            prompt_styles.append((token, cli_style[token]))\n\n    override_style = Style([(\"bottom-toolbar\", \"noreverse\")])\n    return merge_styles([style_from_pygments_cls(style), override_style, Style(prompt_styles)])\n\n\ndef style_factory_output(name, cli_style):\n    try:\n        style = pygments.styles.get_style_by_name(name).styles\n    except ClassNotFound:\n",
    "line_range": [
        92,
        124
    ],
    "command_specific_fields": {
        "method_name": "style_factory"
    },
    "language": "python",
    "commit": "af5a17d980450e184cfc25e56e0e91a1389d378d",
    "prompt": ""
}