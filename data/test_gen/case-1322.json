{
    "case_id": "case-1322",
    "repo_name": "yaml/pyyaml",
    "file_path": "lib/yaml/scanner.py",
    "code_snippet": "\n\n    def scan_plain(self):\n\n        # See the specification for details.\n\n        # We add an additional restriction for the flow context:\n\n        #   plain scalars in the flow context cannot contain ',' or '?'.\n\n        # We also keep track of the `allow_simple_key` flag here.\n\n        # Indentation rules are loosed for the flow context.\n\n        chunks = []\n\n        start_mark = self.get_mark()\n\n        end_mark = start_mark\n\n        indent = self.indent+1\n\n        # We allow zero indentation for scalars, but then we need to check for\n\n        # document separators at the beginning of the line.\n\n        #if indent == 0:\n\n        #    indent = 1\n\n        spaces = []\n\n        while True:\n\n            length = 0\n\n            if self.peek() == '#':\n\n                break\n\n            while True:\n\n                ch = self.peek(length)\n\n                if ch in '\\0 \\t\\r\\n\\x85\\u2028\\u2029'    \\\n\n                        or (ch == ':' and\n\n                                self.peek(length+1) in '\\0 \\t\\r\\n\\x85\\u2028\\u2029'\n\n                                      + (u',[]{}' if self.flow_level else u''))\\\n\n                        or (self.flow_level and ch in ',?[]{}'):\n\n                    break\n\n                length += 1\n\n            if length == 0:\n\n                break\n\n            self.allow_simple_key = False\n\n            chunks.extend(spaces)\n\n            chunks.append(self.prefix(length))\n\n            self.forward(length)\n\n            end_mark = self.get_mark()\n\n            spaces = self.scan_plain_spaces(indent, start_mark)\n\n            if not spaces or self.peek() == '#' \\\n\n                    or (not self.flow_level and self.column < indent):\n\n                break\n\n        return ScalarToken(''.join(chunks), True, start_mark, end_mark)\n",
    "line_range": [
        1268,
        1309
    ],
    "command_specific_fields": {
        "method_name": "scan_plain"
    },
    "language": "python",
    "commit": "a2d19c0234866dc9d4d55abf3009699c258bb72f",
    "prompt": ""
}