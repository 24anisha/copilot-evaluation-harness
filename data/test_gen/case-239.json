{
    "case_id": "case-239",
    "repo_name": "expressjs/express",
    "file_path": "lib/router/index.js",
    "code_snippet": "\n\nproto.param = function param(name, fn) {\n\n  // param logic\n\n  if (typeof name === 'function') {\n\n    deprecate('router.param(fn): Refactor to use path params');\n\n    this._params.push(name);\n\n    return;\n\n  }\n\n\n\n  // apply param functions\n\n  var params = this._params;\n\n  var len = params.length;\n\n  var ret;\n\n\n\n  if (name[0] === ':') {\n\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n\n    name = name.slice(1)\n\n  }\n\n\n\n  for (var i = 0; i < len; ++i) {\n\n    if (ret = params[i](name, fn)) {\n\n      fn = ret;\n\n    }\n\n  }\n\n\n\n  // ensure we end up with a\n\n  // middleware function\n\n  if ('function' !== typeof fn) {\n\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n\n  }\n\n\n\n  (this.params[name] = this.params[name] || []).push(fn);\n\n  return this;\n\n};\n",
    "line_range": [
        95,
        129
    ],
    "command_specific_fields": {
        "method_name": "param"
    },
    "language": "javascript",
    "commit": "2177f67f5439494f7a29a8d04f744cc20fb9f201",
    "prompt": ""
}