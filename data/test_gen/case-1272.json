{
    "case_id": "case-1272",
    "repo_name": "psf/requests",
    "file_path": "src/requests/utils.py",
    "code_snippet": "\n\n\n\ndef parse_header_links(value):\n\n    \"\"\"Return a list of parsed link headers proxies.\n\n\n\n    i.e. Link: <http:/.../front.jpeg>; rel=front; type=\"image/jpeg\",<http://.../back.jpeg>; rel=back;type=\"image/jpeg\"\n\n\n\n    :rtype: list\n\n    \"\"\"\n\n\n\n    links = []\n\n\n\n    replace_chars = \" '\\\"\"\n\n\n\n    value = value.strip(replace_chars)\n\n    if not value:\n\n        return links\n\n\n\n    for val in re.split(\", *<\", value):\n\n        try:\n\n            url, params = val.split(\";\", 1)\n\n        except ValueError:\n\n            url, params = val, \"\"\n\n\n\n        link = {\"url\": url.strip(\"<> '\\\"\")}\n\n\n\n        for param in params.split(\";\"):\n\n            try:\n\n                key, value = param.split(\"=\")\n\n            except ValueError:\n\n                break\n\n\n\n            link[key.strip(replace_chars)] = value.strip(replace_chars)\n\n\n\n        links.append(link)\n\n\n\n    return links\n",
    "line_range": [
        915,
        951
    ],
    "command_specific_fields": {
        "method_name": "parse_header_links"
    },
    "language": "python",
    "commit": "79b74ef704dc0d804937c0d015c5e9c3b02b79bd",
    "prompt": ""
}