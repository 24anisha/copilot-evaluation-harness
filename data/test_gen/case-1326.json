{
    "case_id": "case-1326",
    "repo_name": "dbcli/mycli",
    "file_path": "mycli/packages/special/main.py",
    "code_snippet": "\n\n@export\ndef execute(cur, sql):\n    \"\"\"Execute a special command and return the results. If the special command\n    is not supported a KeyError will be raised.\n    \"\"\"\n    command, verbose, arg = parse_special_command(sql)\n\n    if (command not in COMMANDS) and (command.lower() not in COMMANDS):\n        raise CommandNotFound\n\n    try:\n        special_cmd = COMMANDS[command]\n    except KeyError:\n        special_cmd = COMMANDS[command.lower()]\n        if special_cmd.case_sensitive:\n            raise CommandNotFound(\"Command not found: %s\" % command)\n\n    # \"help <SQL KEYWORD> is a special case. We want built-in help, not\n    # mycli help here.\n    if command == \"help\" and arg:\n        return show_keyword_help(cur=cur, arg=arg)\n\n    if special_cmd.arg_type == NO_QUERY:\n        return special_cmd.handler()\n    elif special_cmd.arg_type == PARSED_QUERY:\n        return special_cmd.handler(cur=cur, arg=arg, verbose=verbose)\n    elif special_cmd.arg_type == RAW_QUERY:\n        return special_cmd.handler(cur=cur, query=sql)\n",
    "line_range": [
        48,
        77
    ],
    "command_specific_fields": {
        "method_name": "execute"
    },
    "language": "python",
    "commit": "af5a17d980450e184cfc25e56e0e91a1389d378d",
    "prompt": ""
}