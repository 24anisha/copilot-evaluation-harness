{
    "case_id": "case-912",
    "repo_name": "pallets/click",
    "file_path": "src/click/shell_completion.py",
    "code_snippet": "\n\n\n\ndef _is_incomplete_argument(ctx: Context, param: Parameter) -> bool:\n\n    \"\"\"Determine if the given parameter is an argument that can still\n\n    accept values.\n\n\n\n    :param ctx: Invocation context for the command represented by the\n\n        parsed complete args.\n\n    :param param: Argument object being checked.\n\n    \"\"\"\n\n    if not isinstance(param, Argument):\n\n        return False\n\n\n\n    assert param.name is not None\n\n    # Will be None if expose_value is False.\n\n    value = ctx.params.get(param.name)\n\n    return (\n\n        param.nargs == -1\n\n        or ctx.get_parameter_source(param.name) is not ParameterSource.COMMANDLINE\n\n        or (\n\n            param.nargs > 1\n\n            and isinstance(value, (tuple, list))\n\n            and len(value) < param.nargs\n\n        )\n\n    )\n",
    "line_range": [
        472,
        496
    ],
    "command_specific_fields": {
        "method_name": "_is_incomplete_argument"
    },
    "language": "python",
    "commit": "14f735cf59618941cf2930e633eb77651b1dc7cb",
    "prompt": ""
}