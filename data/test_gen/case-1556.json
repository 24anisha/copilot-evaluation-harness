{
    "case_id": "case-1556",
    "repo_name": "harelba/q",
    "file_path": "bin/q.py",
    "code_snippet": "        return 'e_%s_fn_%s' % (self.engine_id,hashlib.sha1(six.b(filenames_str)).hexdigest())\n\n\n\n    def choose_db_to_use(self,forced_db_to_use=None,stop_after_analysis=False):\n\n        self.source = self.qsql_filename\n\n        self.source_type = self.table_source_type\n\n\n\n        self.db_id = '%s' % self._generate_qsql_only_db_name__temp(self.qtable_name)\n\n\n\n        x = 'file:%s?immutable=1' % self.qsql_filename\n\n        self.db_to_use = Sqlite3DB(self.db_id, x, self.qsql_filename,create_qcatalog=False)\n\n\n\n        if forced_db_to_use:\n\n            xprint(\"Forced qsql to use forced_db: %s\" % forced_db_to_use)\n\n\n\n            # TODO RLRL Move query to Sqlite3DB\n\n            all_table_names = [(x[0],x[1]) for x in self.db_to_use.execute_and_fetch(\"select content_signature_key,temp_table_name from %s\" % self.db_to_use.QCATALOG_TABLE_NAME).results]\n\n            csk,t = list(filter(lambda x: x[1] == self.table_name,all_table_names))[0]\n\n            xprint(\"Copying table %s from db_id %s\" % (t,self.db_id))\n\n            d = self.db_to_use.get_from_qcatalog_using_table_name(t)\n\n\n\n            new_table_name = forced_db_to_use.attach_and_copy_table(self.db_to_use,self.table_name,stop_after_analysis)\n\n\n\n            xprint(\"CS\",d['content_signature'])\n\n            cs = OrderedDict(json.loads(d['content_signature']))\n\n            forced_db_to_use.add_to_qcatalog_table(new_table_name, cs, d['creation_time'],\n\n                                    d['source_type'], d['source'])\n\n\n\n            self.table_name = new_table_name\n\n            self.db_id = forced_db_to_use.db_id\n\n            self.db_to_use = forced_db_to_use\n\n\n\n        return\n",
    "line_range": [
        1991,
        2022
    ],
    "command_specific_fields": {
        "method_name": "choose_db_to_use"
    },
    "language": "python",
    "commit": "03e8b395055747a45f8c12480fd4ed95c2b4e906",
    "prompt": ""
}