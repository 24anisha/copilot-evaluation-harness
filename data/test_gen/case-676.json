{
    "case_id": "case-676",
    "repo_name": "KillianLucas/open-interpreter",
    "file_path": "interpreter/core/computer/display/display.py",
    "code_snippet": "\n\n    def find_text(self, text, screenshot=None):\n\n        \"\"\"\n\n        Searches for specified text within a screenshot or the current screen if no screenshot is provided.\n\n        \"\"\"\n\n        if screenshot == None:\n\n            screenshot = self.screenshot(show=False)\n\n\n\n        if not self.computer.offline:\n\n            # Convert the screenshot to base64\n\n            buffered = BytesIO()\n\n            screenshot.save(buffered, format=\"PNG\")\n\n            screenshot_base64 = base64.b64encode(buffered.getvalue()).decode()\n\n\n\n            try:\n\n                response = requests.post(\n\n                    f'{self.computer.api_base.strip(\"/\")}/point/text/',\n\n                    json={\"query\": text, \"base64\": screenshot_base64},\n\n                )\n\n                response = response.json()\n\n                return response\n\n            except:\n\n                print(\"Attempting to find the text locally.\")\n\n\n\n        # We'll only get here if 1) self.computer.offline = True, or the API failed\n\n\n\n        # Find the text in the screenshot\n\n        centers = find_text_in_image(screenshot, text, self.computer.debug)\n\n\n\n        return [\n\n            {\"coordinates\": center, \"text\": \"\", \"similarity\": 1} for center in centers\n\n        ]  # Have it deliver the text properly soon.\n",
    "line_range": [
        256,
        288
    ],
    "command_specific_fields": {
        "method_name": "find_text"
    },
    "language": "python",
    "commit": "33d6e55e2f33509d62749b8f0466db82403170eb",
    "prompt": ""
}