{
    "case_id": "case-529",
    "repo_name": "timc1/kbar",
    "file_path": "src/action/ActionImpl.ts",
    "code_snippet": "  children: ActionImpl[] = [];\n\n\n\n  constructor(action: Action, options: ActionImplOptions) {\n\n    Object.assign(this, action);\n\n    this.id = action.id;\n\n    this.name = action.name;\n\n    this.keywords = extendKeywords(action);\n\n    const perform = action.perform;\n\n    this.command =\n\n      perform &&\n\n      new Command(\n\n        {\n\n          perform: () => perform(this),\n\n        },\n\n        {\n\n          history: options.history,\n\n        }\n\n      );\n\n    // Backwards compatibility\n\n    this.perform = this.command?.perform;\n\n\n\n    if (action.parent) {\n\n      const parentActionImpl = options.store[action.parent];\n\n      invariant(\n\n        parentActionImpl,\n\n        `attempted to create an action whos parent: ${action.parent} does not exist in the store.`\n\n      );\n\n      parentActionImpl.addChild(this);\n\n    }\n\n  }\n",
    "line_range": [
        40,
        69
    ],
    "command_specific_fields": {
        "method_name": "constructor"
    },
    "language": "typescript",
    "commit": "952d7c6badfe10c3b7b3bd46bbf42722ff03bfc8",
    "prompt": ""
}