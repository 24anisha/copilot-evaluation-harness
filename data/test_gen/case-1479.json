{
    "case_id": "case-1479",
    "repo_name": "Rapptz/discord.py",
    "file_path": "discord/gateway.py",
    "code_snippet": "        await self.send_as_json(payload)\n\n\n\n    @classmethod\n\n    async def from_connection_state(\n\n        cls,\n\n        state: VoiceConnectionState,\n\n        *,\n\n        resume: bool = False,\n\n        hook: Optional[Callable[..., Coroutine[Any, Any, Any]]] = None,\n\n    ) -> Self:\n\n        \"\"\"Creates a voice websocket for the :class:`VoiceClient`.\"\"\"\n\n        gateway = f'wss://{state.endpoint}/?v=4'\n\n        client = state.voice_client\n\n        http = client._state.http\n\n        socket = await http.ws_connect(gateway, compress=15)\n\n        ws = cls(socket, loop=client.loop, hook=hook)\n\n        ws.gateway = gateway\n\n        ws._connection = state\n\n        ws._max_heartbeat_timeout = 60.0\n\n        ws.thread_id = threading.get_ident()\n\n\n\n        if resume:\n\n            await ws.resume()\n\n        else:\n\n            await ws.identify()\n\n\n\n        return ws\n",
    "line_range": [
        866,
        892
    ],
    "command_specific_fields": {
        "method_name": "from_connection_state"
    },
    "language": "python",
    "commit": "ff638d393d0f5a83639ccc087bec9bf588b59a22",
    "prompt": ""
}