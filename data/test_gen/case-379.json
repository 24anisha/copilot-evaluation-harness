{
    "case_id": "case-379",
    "repo_name": "nock/nock",
    "file_path": "lib/common.js",
    "code_snippet": " */\n\nconst expand = input => {\n\n  if (input === undefined || input === null) {\n\n    return input\n\n  }\n\n\n\n  const keys = Object.keys(input)\n\n\n\n  const result = {}\n\n  let resultPtr = result\n\n\n\n  for (let path of keys) {\n\n    const originalPath = path\n\n    if (path.indexOf('[') >= 0) {\n\n      path = path.replace(/\\[/g, '.').replace(/]/g, '')\n\n    }\n\n\n\n    const parts = path.split('.')\n\n\n\n    const check = parts.filter(blocklistFilter)\n\n\n\n    if (check.length !== parts.length) {\n\n      return undefined\n\n    }\n\n    resultPtr = result\n\n    const lastIndex = parts.length - 1\n\n\n\n    for (let i = 0; i < parts.length; ++i) {\n\n      const part = parts[i]\n\n      if (i === lastIndex) {\n\n        if (Array.isArray(resultPtr)) {\n\n          resultPtr[+part] = input[originalPath]\n\n        } else {\n\n          resultPtr[part] = input[originalPath]\n\n        }\n\n      } else {\n\n        if (resultPtr[part] === undefined || resultPtr[part] === null) {\n\n          const nextPart = parts[i + 1]\n\n          if (/^\\d+$/.test(nextPart)) {\n\n            resultPtr[part] = []\n\n          } else {\n\n            resultPtr[part] = {}\n\n          }\n\n        }\n\n        resultPtr = resultPtr[part]\n\n      }\n\n    }\n\n  }\n\n  return result\n\n}\n",
    "line_range": [
        686,
        736
    ],
    "command_specific_fields": {
        "method_name": "expand"
    },
    "language": "javascript",
    "commit": "2b7836d36c4f22f449b36ad9fd1fff2d14e9200d",
    "prompt": ""
}