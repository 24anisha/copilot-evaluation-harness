{
    "case_id": "case-447",
    "repo_name": "Rob--W/cors-anywhere",
    "file_path": "lib/cors-anywhere.js",
    "code_snippet": "{\n  var match = req_url.match(/^(?:(https?:)?\\/\\/)?(([^\\/?]+?)(?::(\\d{0,5})(?=[\\/?]|$))?)([\\/?][\\S\\s]*|$)/i);\n  //                              ^^^^^^^          ^^^^^^^^      ^^^^^^^                ^^^^^^^^^^^^\n  //                            1:protocol       3:hostname     4:port                 5:path + query string\n  //                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //                                            2:host\n  if (!match) {\n    return null;\n  }\n  if (!match[1]) {\n    if (/^https?:/i.test(req_url)) {\n      // The pattern at top could mistakenly parse \"http:///\" as host=\"http:\" and path=///.\n      return null;\n    }\n    // Scheme is omitted.\n    if (req_url.lastIndexOf('//', 0) === -1) {\n      // \"//\" is omitted.\n      req_url = '//' + req_url;\n    }\n    req_url = (match[4] === '443' ? 'https:' : 'http:') + req_url;\n  }\n  var parsed = url.parse(req_url);\n  if (!parsed.hostname) {\n    // \"http://:1/\" and \"http:/notenoughslashes\" could end up here.\n    return null;\n  }\n  return parsed;\n}",
    "line_range": [
        225,
        254
    ],
    "command_specific_fields": {
        "method_name": "parseURL"
    },
    "language": "javascript",
    "commit": "70aaa22b3f9ad30c8566024bf25484fd1ed9bda9",
    "prompt": ""
}