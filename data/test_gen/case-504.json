{
    "case_id": "case-504",
    "repo_name": "cheeriojs/cheerio",
    "file_path": "src/api/attributes.ts",
    "code_snippet": " * @see {@link https://api.jquery.com/removeClass/}\n\n */\n\nexport function removeClass<T extends AnyNode, R extends ArrayLike<T>>(\n\n  this: R,\n\n  name?:\n\n    | string\n\n    | ((this: Element, i: number, className: string) => string | undefined),\n\n): R {\n\n  // Handle if value is a function\n\n  if (typeof name === 'function') {\n\n    return domEach(this, (el, i) => {\n\n      if (isTag(el)) {\n\n        removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n\n      }\n\n    });\n\n  }\n\n\n\n  const classes = splitNames(name);\n\n  const numClasses = classes.length;\n\n  const removeAll = arguments.length === 0;\n\n\n\n  return domEach(this, (el) => {\n\n    if (!isTag(el)) return;\n\n\n\n    if (removeAll) {\n\n      // Short circuit the remove all case as this is the nice one\n\n      el.attribs['class'] = '';\n\n    } else {\n\n      const elClasses = splitNames(el.attribs['class']);\n\n      let changed = false;\n\n\n\n      for (let j = 0; j < numClasses; j++) {\n\n        const index = elClasses.indexOf(classes[j]);\n\n\n\n        if (index >= 0) {\n\n          elClasses.splice(index, 1);\n\n          changed = true;\n\n\n\n          /*\n\n           * We have to do another pass to ensure that there are not duplicate\n\n           * classes listed\n\n           */\n\n          j--;\n\n        }\n\n      }\n\n      if (changed) {\n\n        el.attribs['class'] = elClasses.join(' ');\n\n      }\n\n    }\n\n  });\n\n}\n",
    "line_range": [
        1001,
        1051
    ],
    "command_specific_fields": {
        "method_name": "removeClass"
    },
    "language": "typescript",
    "commit": "da0b8840f42489030da52172f08d79d4509c999b",
    "prompt": ""
}