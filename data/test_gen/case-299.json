{
    "case_id": "case-0",
    "repo_name": "trekhleb/javascript-algorithms",
    "file_path": "src/algorithms/statistics/weighted-random/weightedRandom.js",
    "code_snippet": "{\n  if (items.length !== weights.length) {\n    throw new Error('Items and weights must be of the same size');\n  }\n\n  if (!items.length) {\n    throw new Error('Items must not be empty');\n  }\n\n  // Preparing the cumulative weights array.\n  // For example:\n  // - weights = [1, 4, 3]\n  // - cumulativeWeights = [1, 5, 8]\n  const cumulativeWeights = [];\n  for (let i = 0; i < weights.length; i += 1) {\n    cumulativeWeights[i] = weights[i] + (cumulativeWeights[i - 1] || 0);\n  }\n\n  // Getting the random number in a range of [0...sum(weights)]\n  // For example:\n  // - weights = [1, 4, 3]\n  // - maxCumulativeWeight = 8\n  // - range for the random number is [0...8]\n  const maxCumulativeWeight = cumulativeWeights[cumulativeWeights.length - 1];\n  const randomNumber = maxCumulativeWeight * Math.random();\n\n  // Picking the random item based on its weight.\n  // The items with higher weight will be picked more often.\n  for (let itemIndex = 0; itemIndex < items.length; itemIndex += 1) {\n    if (cumulativeWeights[itemIndex] >= randomNumber) {\n      return {\n        item: items[itemIndex],\n        index: itemIndex,\n      };\n    }\n  }\n}",
    "line_range": [
        14,
        52
    ],
    "command_specific_fields": {
        "method_name": "weightedRandom"
    },
    "language": "javascript",
    "commit": "ca3d16dcce7a493ae12c03ca20ede4fd7801f7a2"
}