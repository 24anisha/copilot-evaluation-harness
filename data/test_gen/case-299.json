{
    "case_id": "case-299",
    "repo_name": "trekhleb/javascript-algorithms",
    "file_path": "src/algorithms/statistics/weighted-random/weightedRandom.js",
    "code_snippet": " */\n\n/* eslint-disable consistent-return */\n\nexport default function weightedRandom(items, weights) {\n\n  if (items.length !== weights.length) {\n\n    throw new Error('Items and weights must be of the same size');\n\n  }\n\n\n\n  if (!items.length) {\n\n    throw new Error('Items must not be empty');\n\n  }\n\n\n\n  // Preparing the cumulative weights array.\n\n  // For example:\n\n  // - weights = [1, 4, 3]\n\n  // - cumulativeWeights = [1, 5, 8]\n\n  const cumulativeWeights = [];\n\n  for (let i = 0; i < weights.length; i += 1) {\n\n    cumulativeWeights[i] = weights[i] + (cumulativeWeights[i - 1] || 0);\n\n  }\n\n\n\n  // Getting the random number in a range of [0...sum(weights)]\n\n  // For example:\n\n  // - weights = [1, 4, 3]\n\n  // - maxCumulativeWeight = 8\n\n  // - range for the random number is [0...8]\n\n  const maxCumulativeWeight = cumulativeWeights[cumulativeWeights.length - 1];\n\n  const randomNumber = maxCumulativeWeight * Math.random();\n\n\n\n  // Picking the random item based on its weight.\n\n  // The items with higher weight will be picked more often.\n\n  for (let itemIndex = 0; itemIndex < items.length; itemIndex += 1) {\n\n    if (cumulativeWeights[itemIndex] >= randomNumber) {\n\n      return {\n\n        item: items[itemIndex],\n\n        index: itemIndex,\n\n      };\n\n    }\n\n  }\n\n}\n",
    "line_range": [
        14,
        52
    ],
    "command_specific_fields": {
        "method_name": "weightedRandom"
    },
    "language": "javascript",
    "commit": "ca3d16dcce7a493ae12c03ca20ede4fd7801f7a2",
    "prompt": ""
}