{
    "case_id": "case-802",
    "repo_name": "pallets/flask",
    "file_path": "src/flask/app.py",
    "code_snippet": "        return rv\n\n\n\n    def preprocess_request(self) -> ft.ResponseReturnValue | None:\n\n        \"\"\"Called before the request is dispatched. Calls\n\n        :attr:`url_value_preprocessors` registered with the app and the\n\n        current blueprint (if any). Then calls :attr:`before_request_funcs`\n\n        registered with the app and the blueprint.\n\n\n\n        If any :meth:`before_request` handler returns a non-None value, the\n\n        value is handled as if it was the return value from the view, and\n\n        further request handling is stopped.\n\n        \"\"\"\n\n        names = (None, *reversed(request.blueprints))\n\n\n\n        for name in names:\n\n            if name in self.url_value_preprocessors:\n\n                for url_func in self.url_value_preprocessors[name]:\n\n                    url_func(request.endpoint, request.view_args)\n\n\n\n        for name in names:\n\n            if name in self.before_request_funcs:\n\n                for before_func in self.before_request_funcs[name]:\n\n                    rv = self.ensure_sync(before_func)()\n\n\n\n                    if rv is not None:\n\n                        return rv  # type: ignore[no-any-return]\n\n\n\n        return None\n",
    "line_range": [
        1248,
        1275
    ],
    "command_specific_fields": {
        "method_name": "preprocess_request"
    },
    "language": "python",
    "commit": "a8956feba1e40105e7bc78fa62ce36c58d1c91e1",
    "prompt": ""
}