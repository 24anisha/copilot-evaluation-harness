{
    "case_id": "case-1013",
    "repo_name": "lra/mackup",
    "file_path": "mackup/utils.py",
    "code_snippet": "\n\n\n\ndef copy(src, dst):\n\n    \"\"\"\n\n    Copy a file or a folder (recursively) from src to dst.\n\n\n\n    For the sake of simplicity, both src and dst must be absolute path and must\n\n    include the filename of the file or folder.\n\n    Also do not include any trailing slash.\n\n\n\n    e.g. copy('/path/to/src_file', '/path/to/dst_file')\n\n    or copy('/path/to/src_folder', '/path/to/dst_folder')\n\n\n\n    But not: copy('/path/to/src_file', 'path/to/')\n\n    or copy('/path/to/src_folder/', '/path/to/dst_folder')\n\n\n\n    Args:\n\n        src (str): Source file or folder\n\n        dst (str): Destination file or folder\n\n    \"\"\"\n\n    assert isinstance(src, str)\n\n    assert os.path.exists(src)\n\n    assert isinstance(dst, str)\n\n\n\n    # Create the path to the dst file if it does not exist\n\n    abs_path = os.path.dirname(os.path.abspath(dst))\n\n    if not os.path.isdir(abs_path):\n\n        os.makedirs(abs_path)\n\n\n\n    # We need to copy a single file\n\n    if os.path.isfile(src):\n\n        # Copy the src file to dst\n\n        shutil.copy(src, dst)\n\n\n\n    # We need to copy a whole folder\n\n    elif os.path.isdir(src):\n\n        shutil.copytree(src, dst)\n\n\n\n    # What the heck is this?\n\n    else:\n\n        raise ValueError(\"Unsupported file: {}\".format(src))\n\n\n\n    # Set the good mode to the file or folder recursively\n\n    chmod(dst)\n",
    "line_range": [
        69,
        112
    ],
    "command_specific_fields": {
        "method_name": "copy"
    },
    "language": "python",
    "commit": "0def08b8543ac3a436257cce4426a5b109b31a2d",
    "prompt": ""
}