{
    "case_id": "case-592",
    "repo_name": "cheeriojs/cheerio",
    "file_path": "src/api/attributes.ts",
    "code_snippet": " * @see {@link https://api.jquery.com/addClass/}\n\n */\n\nexport function addClass<T extends AnyNode, R extends ArrayLike<T>>(\n\n  this: R,\n\n  value?:\n\n    | string\n\n    | ((this: Element, i: number, className: string) => string | undefined),\n\n): R {\n\n  // Support functions\n\n  if (typeof value === 'function') {\n\n    return domEach(this, (el, i) => {\n\n      if (isTag(el)) {\n\n        const className = el.attribs['class'] || '';\n\n        addClass.call([el], value.call(el, i, className));\n\n      }\n\n    });\n\n  }\n\n\n\n  // Return if no value or not a string or function\n\n  if (!value || typeof value !== 'string') return this;\n\n\n\n  const classNames = value.split(rspace);\n\n  const numElements = this.length;\n\n\n\n  for (let i = 0; i < numElements; i++) {\n\n    const el = this[i];\n\n    // If selected element isn't a tag, move on\n\n    if (!isTag(el)) continue;\n\n\n\n    // If we don't already have classes \u2014 always set xmlMode to false here, as it doesn't matter for classes\n\n    const className = getAttr(el, 'class', false);\n\n\n\n    if (className) {\n\n      let setClass = ` ${className} `;\n\n\n\n      // Check if class already exists\n\n      for (const cn of classNames) {\n\n        const appendClass = `${cn} `;\n\n        if (!setClass.includes(` ${appendClass}`)) setClass += appendClass;\n\n      }\n\n\n\n      setAttr(el, 'class', setClass.trim());\n\n    } else {\n\n      setAttr(el, 'class', classNames.join(' ').trim());\n\n    }\n\n  }\n\n\n\n  return this;\n\n}\n",
    "line_range": [
        933,
        981
    ],
    "command_specific_fields": {
        "method_name": "addClass"
    },
    "language": "typescript",
    "commit": "da0b8840f42489030da52172f08d79d4509c999b",
    "prompt": ""
}