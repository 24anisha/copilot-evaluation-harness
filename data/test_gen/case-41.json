{
    "case_id": "case-41",
    "repo_name": "winstonjs/winston",
    "file_path": "lib/winston/logger.js",
    "code_snippet": "   */\n\n  query(options, callback) {\n\n    if (typeof options === 'function') {\n\n      callback = options;\n\n      options = {};\n\n    }\n\n\n\n    options = options || {};\n\n    const results = {};\n\n    const queryObject = Object.assign({}, options.query || {});\n\n\n\n    // Helper function to query a single transport\n\n    function queryTransport(transport, next) {\n\n      if (options.query && typeof transport.formatQuery === 'function') {\n\n        options.query = transport.formatQuery(queryObject);\n\n      }\n\n\n\n      transport.query(options, (err, res) => {\n\n        if (err) {\n\n          return next(err);\n\n        }\n\n\n\n        if (typeof transport.formatResults === 'function') {\n\n          res = transport.formatResults(res, options.format);\n\n        }\n\n\n\n        next(null, res);\n\n      });\n\n    }\n\n\n\n    // Helper function to accumulate the results from `queryTransport` into\n\n    // the `results`.\n\n    function addResults(transport, next) {\n\n      queryTransport(transport, (err, result) => {\n\n        // queryTransport could potentially invoke the callback multiple times\n\n        // since Transport code can be unpredictable.\n\n        if (next) {\n\n          result = err || result;\n\n          if (result) {\n\n            results[transport.name] = result;\n\n          }\n\n\n\n          // eslint-disable-next-line callback-return\n\n          next();\n\n        }\n\n\n\n        next = null;\n\n      });\n\n    }\n\n\n\n    // Iterate over the transports in parallel setting the appropriate key in\n\n    // the `results`.\n\n    asyncForEach(\n\n      this.transports.filter(transport => !!transport.query),\n\n      addResults,\n\n      () => callback(null, results)\n\n    );\n\n  }\n",
    "line_range": [
        432,
        490
    ],
    "command_specific_fields": {
        "method_name": "query"
    },
    "language": "javascript",
    "commit": "17192754733c40d261d76b690d84d4d2608c05f1",
    "prompt": ""
}