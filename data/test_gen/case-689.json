{
    "case_id": "case-689",
    "repo_name": "fortra/impacket",
    "file_path": "impacket/dcerpc/v5/dcom/wmi.py",
    "code_snippet": "        else:\n            return self\n\n    def createProperties(self, properties):\n        for property in properties:\n            # Do we have an object property?\n            if properties[property]['type'] == CIM_TYPE_ENUM.CIM_TYPE_OBJECT.value and properties[property]['value'] != None:\n                # Yes.. let's create an Object for it too\n                objRef = OBJREF_CUSTOM()\n                objRef['iid'] = self._iid\n                objRef['clsid'] = CLSID_WbemClassObject\n                objRef['cbExtension'] = 0\n                objRef['ObjectReferenceSize'] = len(properties[property]['value'].getData())\n                objRef['pObjectData'] = properties[property]['value']\n                value = IWbemClassObject( INTERFACE(self.get_cinstance(), objRef.getData(), self.get_ipidRemUnknown(),\n                      oxid=self.get_oxid(), target=self.get_target()))\n            elif properties[property]['type'] == CIM_TYPE_ENUM.CIM_ARRAY_OBJECT.value:\n                if isinstance(properties[property]['value'], list):\n                    value = list()\n                    for item in properties[property]['value']:\n                        # Yes.. let's create an Object for it too\n                        objRef = OBJREF_CUSTOM()\n                        objRef['iid'] = self._iid\n                        objRef['clsid'] = CLSID_WbemClassObject\n                        objRef['cbExtension'] = 0\n                        objRef['ObjectReferenceSize'] = len(item.getData())\n                        objRef['pObjectData'] = item\n                        wbemClass = IWbemClassObject(\n                            INTERFACE(self.get_cinstance(), objRef.getData(), self.get_ipidRemUnknown(),\n                                      oxid=self.get_oxid(), target=self.get_target()))\n                        value.append(wbemClass)\n                else:\n                    value = properties[property]['value']\n            else:\n",
    "line_range": [
        2609,
        2643
    ],
    "command_specific_fields": {
        "method_name": "createProperties"
    },
    "language": "python",
    "commit": "6d8dd858e1f9877ffe10b34afd67742a6de242f0",
    "prompt": ""
}