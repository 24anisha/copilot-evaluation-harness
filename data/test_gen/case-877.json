{
    "case_id": "case-0",
    "repo_name": "ranger/ranger",
    "file_path": "ranger/gui/widgets/view_miller.py",
    "code_snippet": "        win = self.win\n\n        self.color('in_browser', 'border')\n\n        left_start = 0\n        right_end = self.wid - 1\n\n        for child in self.columns:\n            if not child.has_preview():\n                left_start = child.x + child.wid\n            else:\n                break\n\n        \n        \n        \n        if self.settings.padding_right and not self.pager.visible and self.is_collapsed:\n            right_end = self.columns[-1].x - 1\n            if right_end < left_start:\n                right_end = self.wid - 1\n\n        \n        if 'outline' in border_types:\n            try:\n                \n                win.hline(0, left_start, curses.ACS_HLINE, right_end - left_start)\n                win.hline(self.hei - 1, left_start, curses.ACS_HLINE, right_end - left_start)\n                win.vline(1, left_start, curses.ACS_VLINE, self.hei - 2)\n                \n            except curses.error:\n                pass\n\n        \n        if 'separators' in border_types:\n            for child in self.columns[:-1]:\n                if not child.has_preview():\n                    continue\n                if child.main_column and self.pager.visible:\n                    \n                    \n                    break\n                x = child.x + child.wid\n                y = self.hei - 1\n                try:\n                    \n                    win.vline(1, x, curses.ACS_VLINE, y - 1)\n                    if 'outline' in border_types:\n                        self.addch(0, x, curses.ACS_TTEE, 0)\n                        self.addch(y, x, curses.ACS_BTEE, 0)\n                    else:\n                        self.addch(0, x, curses.ACS_VLINE, 0)\n                        self.addch(y, x, curses.ACS_VLINE, 0)\n                    \n                except curses.error:\n                    \n                    pass\n\n        if 'outline' in border_types:\n            \n            try:\n                \n                win.vline(1, right_end, curses.ACS_VLINE, self.hei - 2)\n                \n            except curses.error:\n                pass\n\n        if 'outline' in border_types:\n            \n            self.addch(0, left_start, curses.ACS_ULCORNER)\n            self.addch(self.hei - 1, left_start, curses.ACS_LLCORNER)\n            self.addch(0, right_end, curses.ACS_URCORNER)\n            self.addch(self.hei - 1, right_end, curses.ACS_LRCORNER)",
    "line_range": [
        113,
        187
    ],
    "command_specific_fields": {
        "method_name": "_draw_borders"
    },
    "language": "python",
    "commit": "80baec602c32208fc3c8a979ce48db53ccdd6725",
    "prompt": ""
}