{
    "case_id": "case-0",
    "repo_name": "ranger/ranger",
    "file_path": "ranger/ext/vcs/vcs.py",
    "code_snippet": "        for wroot, wdirs, _ in os.walk(path):\n            \n            try:\n                wrootobj = self.obj.fm.directories[wroot]\n            except KeyError:\n                wdirs[:] = []\n                continue\n            if not wrootobj.vcs.track:\n                wdirs[:] = []\n                continue\n\n            if wrootobj.content_loaded:\n                has_vcschild = False\n                for fsobj in wrootobj.files_all:\n                    if purge:\n                        if fsobj.is_directory:\n                            fsobj.vcsstatus = None\n                            fsobj.vcs.init_state(fsobj)\n                        else:\n                            fsobj.vcsstatus = None\n                        continue\n\n                    if fsobj.is_directory:\n                        fsobj.vcs.reinit()\n                        if not fsobj.vcs.track:\n                            continue\n                        if fsobj.vcs.is_root_pointer:\n                            has_vcschild = True\n                        else:\n                            fsobj.vcsstatus = self.status_subpath(\n                                os.path.join(wrootobj.realpath, fsobj.basename),\n                                is_directory=True,\n                            )\n                    else:\n                        fsobj.vcsstatus = self.status_subpath(\n                            os.path.join(wrootobj.realpath, fsobj.basename))\n                wrootobj.has_vcschild = has_vcschild\n\n            \n            for wdir in list(wdirs):\n                try:\n                    wdirobj = self.obj.fm.directories[os.path.join(wroot, wdir)]\n                except KeyError:\n                    wdirs.remove(wdir)\n                    continue\n                if not wdirobj.vcs.track or wdirobj.vcs.is_root_pointer:\n                    wdirs.remove(wdir)",
    "line_range": [
        267,
        317
    ],
    "command_specific_fields": {
        "method_name": "_update_walk"
    },
    "language": "python",
    "commit": "80baec602c32208fc3c8a979ce48db53ccdd6725",
    "prompt": ""
}