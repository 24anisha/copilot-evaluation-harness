{
    "case_id": "case-1573",
    "repo_name": "Zulko/moviepy",
    "file_path": "moviepy/video/io/ffmpeg_reader.py",
    "code_snippet": "\n\n    def get_frame(self, t):\n\n        \"\"\"Read a file video frame at time t.\n\n\n\n        Note for coders: getting an arbitrary frame in the video with\n\n        ffmpeg can be painfully slow if some decoding has to be done.\n\n        This function tries to avoid fetching arbitrary frames\n\n        whenever possible, by moving between adjacent frames.\n\n        \"\"\"\n\n        # + 1 so that it represents the frame position that it will be\n\n        # after the frame is read. This makes the later comparisons easier.\n\n        pos = self.get_frame_number(t) + 1\n\n\n\n        # Initialize proc if it is not open\n\n        if not self.proc:\n\n            print(\"Proc not detected\")\n\n            self.initialize(t)\n\n            return self.last_read\n\n\n\n        if pos == self.pos:\n\n            return self.last_read\n\n        elif (pos < self.pos) or (pos > self.pos + 100):\n\n            # We can't just skip forward to `pos` or it would take too long\n\n            self.initialize(t)\n\n            return self.lastread\n\n        else:\n\n            # If pos == self.pos + 1, this line has no effect\n\n            self.skip_frames(pos - self.pos - 1)\n\n            result = self.read_frame()\n\n            return result\n",
    "line_range": [
        197,
        227
    ],
    "command_specific_fields": {
        "method_name": "get_frame"
    },
    "language": "python",
    "commit": "0f6f6d4d9b96c69d109975549fe6293931f1a19d",
    "prompt": ""
}