{
    "case_id": "case-1110",
    "repo_name": "networkx/networkx",
    "file_path": "networkx/algorithms/planarity.py",
    "code_snippet": "        return True, embedding\n\n\n@nx._dispatchable(returns_graph=True)\ndef check_planarity_recursive(G, counterexample=False):\n    \"\"\"Recursive version of :meth:`check_planarity`.\"\"\"\n    planarity_state = LRPlanarity(G)\n    embedding = planarity_state.lr_planarity_recursive()\n    if embedding is None:\n        # graph is not planar\n        if counterexample:\n            return False, get_counterexample_recursive(G)\n        else:\n            return False, None\n    else:\n        # graph is planar\n",
    "line_range": [
        115,
        130
    ],
    "command_specific_fields": {
        "method_name": "check_planarity_recursive"
    },
    "language": "python",
    "commit": "89718e0514bded93ded5b00aed755a4474c1dc6f",
    "prompt": ""
}