{
    "case_id": "case-452",
    "repo_name": "winstonjs/winston",
    "file_path": "lib/winston/logger.js",
    "code_snippet": "   * @returns {Stream} - TODO: add return description.\n\n   */\n\n  stream(options = {}) {\n\n    const out = new Stream();\n\n    const streams = [];\n\n\n\n    out._streams = streams;\n\n    out.destroy = () => {\n\n      let i = streams.length;\n\n      while (i--) {\n\n        streams[i].destroy();\n\n      }\n\n    };\n\n\n\n    // Create a list of all transports for this instance.\n\n    this.transports\n\n      .filter(transport => !!transport.stream)\n\n      .forEach(transport => {\n\n        const str = transport.stream(options);\n\n        if (!str) {\n\n          return;\n\n        }\n\n\n\n        streams.push(str);\n\n\n\n        str.on('log', log => {\n\n          log.transport = log.transport || [];\n\n          log.transport.push(transport.name);\n\n          out.emit('log', log);\n\n        });\n\n\n\n        str.on('error', err => {\n\n          err.transport = err.transport || [];\n\n          err.transport.push(transport.name);\n\n          out.emit('error', err);\n\n        });\n\n      });\n\n\n\n    return out;\n\n  }\n",
    "line_range": [
        495,
        534
    ],
    "command_specific_fields": {
        "method_name": "stream"
    },
    "language": "javascript",
    "commit": "17192754733c40d261d76b690d84d4d2608c05f1",
    "prompt": ""
}