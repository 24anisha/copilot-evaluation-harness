{
    "case_id": "case-719",
    "repo_name": "lra/mackup",
    "file_path": "mackup/application.py",
    "code_snippet": "                    )\n\n    def uninstall(self):\n        \"\"\"\n        Uninstall Mackup.\n\n        Restore any file where it was before the 1st Mackup backup.\n\n        Algorithm:\n            for each file in config\n                if mackup/file exists\n                    if home/file exists\n                        delete home/file\n                    copy mackup/file home/file\n            delete the mackup folder\n            print how to delete mackup\n        \"\"\"\n        # For each file used by the application\n        for filename in self.files:\n            (home_filepath, mackup_filepath) = self.getFilepaths(filename)\n\n            # If the mackup file exists\n            if os.path.isfile(mackup_filepath) or os.path.isdir(mackup_filepath):\n                # Check if there is a corresponding file in the home folder\n                if os.path.exists(home_filepath):\n                    if self.verbose:\n                        print(\n                            \"Reverting {}\\n  at {} ...\".format(\n                                mackup_filepath, home_filepath\n                            )\n                        )\n                    else:\n                        print(\"Reverting {} ...\".format(filename))\n\n                    if self.dry_run:\n                        continue\n\n                    # If there is, delete it as we are gonna copy the Dropbox\n                    # one there\n                    utils.delete(home_filepath)\n\n                    # Copy the Dropbox file to the home folder\n                    utils.copy(mackup_filepath, home_filepath)\n            elif self.verbose:\n                print(\"Doing nothing, {} does not exist\".format(mackup_filepath))\n",
    "line_range": [
        220,
        264
    ],
    "command_specific_fields": {
        "method_name": "uninstall"
    },
    "language": "python",
    "commit": "0def08b8543ac3a436257cce4426a5b109b31a2d",
    "prompt": ""
}