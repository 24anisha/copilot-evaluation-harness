{
    "case_id": "case-1095",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/applications/cli/learning.py",
    "code_snippet": "\n\ndef human_review_input() -> Optional[Review]:\n\n    \"\"\"\n\n    Interactively prompts the user to review the generated code and returns their feedback encapsulated in a Review object.\n\n\n\n    This function will first check if the user has given consent to collect their feedback. If consent is given, it will ask the user a series of questions about the generated code's performance and capture their responses.\n\n\n\n    Returns\n\n    -------\n\n    Optional[Review]\n\n        A Review object containing the user's feedback, or None if consent is not given.\n\n    \"\"\"\n\n    print()\n\n    if not check_collection_consent():\n\n        return None\n\n    print()\n\n    print(\n\n        colored(\"To help gpt-engineer learn, please answer 3 questions:\", \"light_green\")\n\n    )\n\n    print()\n\n\n\n    ran = input(\"Did the generated code run at all? \" + TERM_CHOICES)\n\n    ran = ask_for_valid_input(ran)\n\n\n\n    if ran == \"y\":\n\n        perfect = input(\n\n            \"Did the generated code do everything you wanted? \" + TERM_CHOICES\n\n        )\n\n        perfect = ask_for_valid_input(perfect)\n\n\n\n        if perfect != \"y\":\n\n            useful = input(\"Did the generated code do anything useful? \" + TERM_CHOICES)\n\n            useful = ask_for_valid_input(useful)\n\n        else:\n\n            useful = \"\"\n\n    else:\n\n        perfect = \"\"\n\n        useful = \"\"\n\n\n\n    if perfect != \"y\":\n\n        comments = input(\n\n            \"If you have time, please explain what was not working \"\n\n            + colored(\"(ok to leave blank)\\n\", \"light_green\")\n\n        )\n\n    else:\n\n        comments = \"\"\n\n\n\n    return Review(\n\n        raw=\", \".join([ran, perfect, useful]),\n\n        ran={\"y\": True, \"n\": False, \"u\": None, \"\": None}[ran],\n\n        works={\"y\": True, \"n\": False, \"u\": None, \"\": None}[useful],\n\n        perfect={\"y\": True, \"n\": False, \"u\": None, \"\": None}[perfect],\n\n        comments=comments,\n\n    )\n",
    "line_range": [
        120,
        174
    ],
    "command_specific_fields": {
        "method_name": "human_review_input"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}