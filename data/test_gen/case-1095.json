{
    "case_id": "case-0",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/applications/cli/learning.py",
    "code_snippet": "    print()\n    if not check_collection_consent():\n        return None\n    print()\n    print(\n        colored(\"To help gpt-engineer learn, please answer 3 questions:\", \"light_green\")\n    )\n    print()\n\n    ran = input(\"Did the generated code run at all? \" + TERM_CHOICES)\n    ran = ask_for_valid_input(ran)\n\n    if ran == \"y\":\n        perfect = input(\n            \"Did the generated code do everything you wanted? \" + TERM_CHOICES\n        )\n        perfect = ask_for_valid_input(perfect)\n\n        if perfect != \"y\":\n            useful = input(\"Did the generated code do anything useful? \" + TERM_CHOICES)\n            useful = ask_for_valid_input(useful)\n        else:\n            useful = \"\"\n    else:\n        perfect = \"\"\n        useful = \"\"\n\n    if perfect != \"y\":\n        comments = input(\n            \"If you have time, please explain what was not working \"\n            + colored(\"(ok to leave blank)\\n\", \"light_green\")\n        )\n    else:\n        comments = \"\"\n\n    return Review(\n        raw=\", \".join([ran, perfect, useful]),\n        ran={\"y\": True, \"n\": False, \"u\": None, \"\": None}[ran],\n        works={\"y\": True, \"n\": False, \"u\": None, \"\": None}[useful],\n        perfect={\"y\": True, \"n\": False, \"u\": None, \"\": None}[perfect],\n        comments=comments,\n    )",
    "line_range": [
        120,
        174
    ],
    "command_specific_fields": {
        "method_name": "human_review_input"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c",
    "prompt": ""
}