{
    "case_id": "case-720",
    "repo_name": "mementum/backtrader",
    "file_path": "samples/weekdays-filler/weekdaysfiller.py",
    "code_snippet": "        self.voidbar = [float('Nan')] * data.size()  # init a void bar\n\n    def __call__(self, data):\n        '''Empty bars (NaN) or with last close price are added for weekdays with no\n        data\n\n        Params:\n          - data: the data source to filter/process\n\n        Returns:\n          - True (always): bars are removed (even if put back on the stack)\n\n        '''\n        dt = data.datetime.date()  # current date in int format\n        lastdt = self.lastdt + self.ONEDAY  # move last seen data once forward\n\n        while lastdt < dt:  # loop over gap bars\n            if lastdt.isoweekday() < 6:  # Mon-Fri\n                # Fill in date and add new bar to the stack\n                if self.fillclose:\n                    self.voidbar = [self.lastclose] * data.size()\n                dtime = datetime.datetime.combine(lastdt, data.p.sessionend)\n                self.voidbar[-1] = data.date2num(dtime)\n                data._add2stack(self.voidbar[:])\n\n            lastdt += self.ONEDAY  # move lastdt forward\n\n        self.lastdt = dt  # keep a record of the last seen date\n\n        self.lastclose = data.close[0]\n        data._save2stack(erase=True)  # dt bar to the stack and out of stream\n        return True  # bars are on the stack (new and original)\n",
    "line_range": [
        35,
        66
    ],
    "command_specific_fields": {
        "method_name": "__call__"
    },
    "language": "python",
    "commit": "b853d7c90b6721476eb5a5ea3135224e33db1f14",
    "prompt": ""
}