{
    "case_id": "case-0",
    "repo_name": "gleitz/howdoi",
    "file_path": "howdoi/howdoi.py",
    "code_snippet": "    cache_key = _get_cache_key(link)\n    page = _get_from_cache(cache_key)\n    if not page:\n        logging.info('Fetching page: %s', link)\n        page = _get_result(link + '?answertab=votes')\n        cache.set(cache_key, page)\n    else:\n        logging.info('Using cached page: %s', link)\n\n    html = pq(page)\n\n    first_answer = html('.answercell').eq(0) or html('.answer').eq(0)\n\n    instructions = first_answer.find('pre') or first_answer.find('code')\n    args['tags'] = [t.text for t in html('.post-tag')]\n\n    \n    if first_answer.find(\".js-post-body\"):\n        answer_body_cls = \".js-post-body\"\n    else:\n        \n        answer_body_cls = \".post-text\"\n\n    if not instructions and not args['all']:\n        logging.info('No code sample found, returning entire answer')\n        text = get_text(first_answer.find(answer_body_cls).eq(0))\n    elif args['all']:\n        logging.info('Returning entire answer')\n        texts = []\n        for html_tag in first_answer.items(f'{answer_body_cls} > *'):\n            current_text = get_text(html_tag)\n            if current_text:\n                if html_tag[0].tag in ['pre', 'code']:\n                    texts.append(_format_output(args, current_text))\n                else:\n                    texts.append(current_text)\n        text = '\\n'.join(texts)\n    else:\n        text = _format_output(args, get_text(instructions.eq(0)))\n    if text is None:\n        logging.info('%sAnswer was empty%s', RED, END_FORMAT)\n        text = NO_ANSWER_MSG\n    text = text.strip()\n    return text",
    "line_range": [
        352,
        398
    ],
    "command_specific_fields": {
        "method_name": "_get_answer"
    },
    "language": "python",
    "commit": "6f8813dcb32a481c3683aff64587181b518454c8",
    "prompt": ""
}