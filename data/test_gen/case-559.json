{
    "case_id": "case-559",
    "repo_name": "nexe/nexe",
    "file_path": "src/fs/SnapshotZipFS.ts",
    "code_snippet": "  readdirSync(p: PortablePath, opts: { withFileTypes: true }): Array<Dirent>\n\n  readdirSync(p: PortablePath, opts: { withFileTypes: boolean }): Array<Filename> | Array<Dirent>\n\n  readdirSync(p: PortablePath, opts?: { withFileTypes?: boolean } | null): Array<string | Dirent> {\n\n    const fallback = () => {\n\n      return this.baseFs.readdirSync(p, opts as any)\n\n    }\n\n    return this.makeCallSync(\n\n      p,\n\n      fallback,\n\n      (zipFs, { subPath }) => {\n\n        let fallbackPaths: Array<string | Dirent> = []\n\n        try {\n\n          fallbackPaths = fallback()\n\n        } catch (e) {}\n\n        return fallbackPaths.concat(uniqReaddir(zipFs.readdirSync(subPath, opts as any)))\n\n      },\n\n      {\n\n        requireSubpath: false,\n\n      }\n\n    )\n\n  }\n",
    "line_range": [
        277,
        297
    ],
    "command_specific_fields": {
        "method_name": "readdirSync"
    },
    "language": "typescript",
    "commit": "5219a2ac74f97e644127ea37f000daa4b39da538",
    "prompt": ""
}