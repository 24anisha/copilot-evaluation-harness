{
    "case_id": "case-0",
    "repo_name": "google/yapf",
    "file_path": "yapf/pytree/subtype_assigner.py",
    "code_snippet": "    for child in node.children:\n      self.Visit(child)\n      if (isinstance(child, pytree.Leaf) and\n          child.value in {'<', '>', '==', '>=', '<=', '<>', '!=', 'in', 'is'}):\n        _AppendTokenSubtype(child, subtypes.BINARY_OPERATOR)\n      elif pytree_utils.NodeName(child) == 'comp_op':\n        for grandchild in child.children:\n          _AppendTokenSubtype(grandchild, subtypes.BINARY_OPERATOR)",
    "line_range": [
        137,
        149
    ],
    "command_specific_fields": {
        "method_name": "Visit_comparison"
    },
    "language": "python",
    "commit": "1afbf7112ae61a467276c9401b3c113e6f676d0f",
    "prompt": ""
}