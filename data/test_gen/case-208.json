{
    "case_id": "case-208",
    "repo_name": "dthree/cash",
    "file_path": "dist/commands/cp.js",
    "code_snippet": "};\n\nfunction cpdirSyncRecursive(sourceDir, destDir, options) {\n  var self = this;\n  /* istanbul ignore if */\n  if (!options) {\n    options = {};\n  }\n  var checkDir = fs.statSync(sourceDir);\n  try {\n    fs.mkdirSync(destDir, checkDir.mode);\n  } catch (e) {\n    /* istanbul ignore if */\n    if (e.code !== 'EEXIST') {\n      throw e;\n    }\n  }\n  var files = fs.readdirSync(sourceDir);\n  for (var i = 0; i < files.length; i++) {\n    var srcFile = sourceDir + '/' + files[i];\n    var destFile = destDir + '/' + files[i];\n    var srcFileStat = fs.lstatSync(srcFile);\n    if (srcFileStat.isDirectory()) {\n      // recursion this thing right on back.\n      cpdirSyncRecursive.call(self, srcFile, destFile, options);\n    } else if (srcFileStat.isSymbolicLink()) {\n      var symlinkFull = fs.readlinkSync(srcFile);\n      fs.symlinkSync(symlinkFull, destFile, os.platform() === 'win32' ? 'junction' : null);\n      // At this point, we've hit a file actually worth copying... so copy it on over.\n    } else if (fs.existsSync(destFile) && options.noclobber) {\n        // be silent\n      } else {\n          copyFileSync.call(self, srcFile, destFile);\n        }\n  }\n}\n",
    "line_range": [
        113,
        148
    ],
    "command_specific_fields": {
        "method_name": "cpdirSyncRecursive"
    },
    "language": "javascript",
    "commit": "3e28dae8bdb71215d5034df9003f3ef2804c2754",
    "prompt": ""
}