{
    "case_id": "case-0",
    "repo_name": "Rob--W/cors-anywhere",
    "file_path": "lib/rate-limit.js",
    "code_snippet": "{\n  // Configure rate limit. The following format is accepted for CORSANYWHERE_RATELIMIT:\n  // <max requests per period> <period in minutes> <non-ratelimited hosts>\n  // where <non-ratelimited hosts> is a space-separated list of strings or regexes (/.../) that\n  // matches the whole host (ports have to be listed explicitly if applicable).\n  // <period in minutes> cannot be zero.\n  //\n  // Examples:\n  // - Allow any origin to make one request per 5 minutes:\n  //   1 5\n  //\n  // - Allow example.com to make an unlimited number of requests, and the others 1 per 5 minutes.\n  //   1 5 example.com\n  //\n  // - Allow example.com, or any subdomain to make any number of requests and block the rest:\n  //   0 1 /(.*\\.)?example\\.com/\n  //\n  // - Allow example.com and www.example.com, and block the rest:\n  //   0 1 example.com www.example.com\n  var rateLimitConfig = /^(\\d+) (\\d+)(?:\\s*$|\\s+(.+)$)/.exec(CORSANYWHERE_RATELIMIT);\n  if (!rateLimitConfig) {\n    // No rate limit by default.\n    return function checkRateLimit() {};\n  }\n  var maxRequestsPerPeriod = parseInt(rateLimitConfig[1]);\n  var periodInMinutes = parseInt(rateLimitConfig[2]);\n  var unlimitedPattern = rateLimitConfig[3]; // Will become a RegExp or void.\n  if (unlimitedPattern) {\n    var unlimitedPatternParts = [];\n    unlimitedPattern.trim().split(/\\s+/).forEach(function(unlimitedHost, i) {\n      var startsWithSlash = unlimitedHost.charAt(0) === '/';\n      var endsWithSlash = unlimitedHost.slice(-1) === '/';\n      if (startsWithSlash || endsWithSlash) {\n        if (unlimitedHost.length === 1 || !startsWithSlash || !endsWithSlash) {\n          throw new Error('Invalid CORSANYWHERE_RATELIMIT. Regex at index ' + i +\n              ' must start and end with a slash (\"/\").');\n        }\n        unlimitedHost = unlimitedHost.slice(1, -1);\n        // Throws if the pattern is invalid.\n        new RegExp(unlimitedHost);\n      } else {\n        // Just escape RegExp characters even though they cannot appear in a host name.\n        // The only actual important escape is the dot.\n        unlimitedHost = unlimitedHost.replace(/[$()*+.?[\\\\\\]^{|}]/g, '\\\\$&');\n      }\n      unlimitedPatternParts.push(unlimitedHost);\n    });\n    unlimitedPattern = new RegExp('^(?:' + unlimitedPatternParts.join('|') + ')$', 'i');\n  }\n\n  var accessedHosts = Object.create(null);\n  setInterval(function() {\n    accessedHosts = Object.create(null);\n  }, periodInMinutes * 60000);\n\n  var rateLimitMessage = 'The number of requests is limited to ' + maxRequestsPerPeriod +\n    (periodInMinutes === 1 ? ' per minute' : ' per ' + periodInMinutes + ' minutes') + '. ' +\n    'Please self-host CORS Anywhere if you need more quota. ' +\n    'See https://github.com/Rob--W/cors-anywhere#demo-server';\n\n  return function checkRateLimit(origin) {\n    var host = origin.replace(/^[\\w\\-]+:\\/\\//i, '');\n    if (unlimitedPattern && unlimitedPattern.test(host)) {\n      return;\n    }\n    var count = accessedHosts[host] || 0;\n    ++count;\n    if (count > maxRequestsPerPeriod) {\n      return rateLimitMessage;\n    }\n    accessedHosts[host] = count;\n  };\n}",
    "line_range": [
        0,
        74
    ],
    "command_specific_fields": {
        "method_name": "createRateLimitChecker"
    },
    "language": "javascript",
    "commit": "70aaa22b3f9ad30c8566024bf25484fd1ed9bda9"
}