{
    "case_id": "case-0",
    "repo_name": "AntonOsika/gpt-engineer",
    "file_path": "gpt_engineer/tools/custom_steps.py",
    "code_snippet": "    if ENTRYPOINT_FILE not in files_dict:\n        raise FileNotFoundError(\n            \"The required entrypoint \"\n            + ENTRYPOINT_FILE\n            + \" does not exist in the code.\"\n        )\n\n    attempts = 0\n    if preprompts_holder is None:\n        raise AssertionError(\"Prepromptsholder required for self-heal\")\n    while attempts < MAX_SELF_HEAL_ATTEMPTS:\n        attempts += 1\n        timed_out = False\n\n        \n        execution_env.upload(files_dict)\n        p = execution_env.popen(files_dict[ENTRYPOINT_FILE])\n\n        \n        stdout_full, stderr_full = p.communicate()\n\n        if (p.returncode != 0 and p.returncode != 2) and not timed_out:\n            print(\"run.sh failed.  The log is:\")\n            print(stdout_full.decode(\"utf-8\"))\n            print(stderr_full.decode(\"utf-8\"))\n\n            new_prompt = Prompt(\n                f\"A program with this specification was requested:\\n{prompt}\\n, but running it produced the following output:\\n{stdout_full}\\n and the following errors:\\n{stderr_full}. Please change it so that it fulfills the requirements.\"\n            )\n            files_dict = improve_fn(\n                ai, new_prompt, files_dict, memory, preprompts_holder\n            )\n        else:\n            break\n    return files_dict",
    "line_range": [
        38,
        118
    ],
    "command_specific_fields": {
        "method_name": "self_heal"
    },
    "language": "python",
    "commit": "c1f4a9da5dd0abed15b91f6d1c60464cad84ce6c"
}