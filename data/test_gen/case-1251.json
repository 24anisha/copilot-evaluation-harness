{
    "case_id": "case-1251",
    "repo_name": "ipython/ipython",
    "file_path": "IPython/lib/pretty.py",
    "code_snippet": "\n\n\n\ndef _default_pprint(obj, p, cycle):\n\n    \"\"\"\n\n    The default print function.  Used if an object does not provide one and\n\n    it's none of the builtin objects.\n\n    \"\"\"\n\n    klass = _safe_getattr(obj, '__class__', None) or type(obj)\n\n    if _safe_getattr(klass, '__repr__', None) is not object.__repr__:\n\n        # A user-provided repr. Find newlines and replace them with p.break_()\n\n        _repr_pprint(obj, p, cycle)\n\n        return\n\n    p.begin_group(1, '<')\n\n    p.pretty(klass)\n\n    p.text(' at 0x%x' % id(obj))\n\n    if cycle:\n\n        p.text(' ...')\n\n    elif p.verbose:\n\n        first = True\n\n        for key in dir(obj):\n\n            if not key.startswith('_'):\n\n                try:\n\n                    value = getattr(obj, key)\n\n                except AttributeError:\n\n                    continue\n\n                if isinstance(value, types.MethodType):\n\n                    continue\n\n                if not first:\n\n                    p.text(',')\n\n                p.breakable()\n\n                p.text(key)\n\n                p.text('=')\n\n                step = len(key) + 1\n\n                p.indentation += step\n\n                p.pretty(value)\n\n                p.indentation -= step\n\n                first = False\n\n    p.end_group(1, '>')\n",
    "line_range": [
        595,
        632
    ],
    "command_specific_fields": {
        "method_name": "_default_pprint"
    },
    "language": "python",
    "commit": "128bd582b9894b8ae9ff577aafe13f5fdb39c3cb",
    "prompt": ""
}