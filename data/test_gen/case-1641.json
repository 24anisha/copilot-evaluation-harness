{
    "case_id": "case-1641",
    "repo_name": "python-hyper/rfc3986",
    "file_path": "src/rfc3986/validators.py",
    "code_snippet": "        return self\n\n    def require_presence_of(self, *components: str) -> _Self:\n        \"\"\"Require the components provided.\n\n        This can be specified repeatedly.\n\n        .. versionadded:: 1.0\n\n        :param components:\n            Names of components from :attr:`Validator.COMPONENT_NAMES`.\n        :returns:\n            The validator instance.\n        :rtype:\n            Validator\n        \"\"\"\n        components = tuple(c.lower() for c in components)\n        for component in components:\n            if component not in self.COMPONENT_NAMES:\n                raise ValueError(f'\"{component}\" is not a valid component')\n        self.required_components.update(\n            {component: True for component in components}\n        )\n        return self\n",
    "line_range": [
        171,
        194
    ],
    "command_specific_fields": {
        "method_name": "require_presence_of"
    },
    "language": "python",
    "commit": "75e77baed146976442bb11d4adda0eb322c6a6b5",
    "prompt": ""
}