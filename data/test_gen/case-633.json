{
    "case_id": "case-633",
    "repo_name": "nexe/nexe",
    "file_path": "src/steps/artifacts.ts",
    "code_snippet": " *  - Finally, The patched files are written into source.\n\n */\n\nexport default async function artifacts(compiler: NexeCompiler, next: () => Promise<void>) {\n\n  const { src } = compiler\n\n  const temp = join(src, 'nexe')\n\n  await mkdirpAsync(temp)\n\n  const tmpFiles = await readDirAsync(temp)\n\n\n\n  await Promise.all(\n\n    tmpFiles.map(async (path) => {\n\n      return compiler.writeFileAsync(path.replace(temp, ''), await readFileAsync(path, 'utf-8'))\n\n    })\n\n  )\n\n\n\n  await next()\n\n\n\n  await Promise.all(tmpFiles.map((x) => unlinkAsync(x)))\n\n  return Promise.all(\n\n    compiler.files.map(async (file) => {\n\n      const sourceFile = join(src, file.filename)\n\n      const tempFile = join(temp, file.filename)\n\n      const fileContents = await maybeReadFileContentsAsync(sourceFile)\n\n\n\n      await mkdirpAsync(dirname(tempFile))\n\n      await writeFileAsync(tempFile, fileContents)\n\n      await compiler.writeFileAsync(file.filename, file.contents)\n\n    })\n\n  )\n\n}\n",
    "line_range": [
        40,
        68
    ],
    "command_specific_fields": {
        "method_name": "artifacts"
    },
    "language": "typescript",
    "commit": "5219a2ac74f97e644127ea37f000daa4b39da538",
    "prompt": ""
}