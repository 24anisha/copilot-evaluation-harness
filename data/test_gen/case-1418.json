{
    "case_id": "case-1418",
    "repo_name": "maurosoria/dirsearch",
    "file_path": "lib/core/fuzzer.py",
    "code_snippet": "    def quit(self) -> None:\n        self._quit_event.set()\n        self.play()\n\n    def scan(self, path: str) -> None:\n        scanners = self.get_scanners_for(path)\n        try:\n            response = self._requester.request(path)\n        except RequestException as e:\n            for callback in self.error_callbacks:\n                callback(e)\n            return\n\n        if self.is_excluded(response):\n            for callback in self.not_found_callbacks:\n                callback(response)\n            return\n\n        for tester in scanners:\n            # Check if the response is unique, not wildcard\n            if not tester.check(path, response):\n                for callback in self.not_found_callbacks:\n                    callback(response)\n                return\n\n        for callback in self.match_callbacks:\n            callback(response)\n\n    def thread_proc(self) -> None:\n        logger.info(f'THREAD-{threading.get_ident()} started\"')\n\n",
    "line_range": [
        230,
        260
    ],
    "command_specific_fields": {
        "method_name": "thread_proc"
    },
    "language": "python",
    "commit": "59bc9ce43063a1036cf0077f2f1e68883397dac4",
    "prompt": ""
}