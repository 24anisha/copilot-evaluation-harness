{
    "case_id": "case-1232",
    "repo_name": "gleitz/howdoi",
    "file_path": "howdoi/howdoi.py",
    "code_snippet": "\n\n\n\ndef get_parser():\n\n    parser = argparse.ArgumentParser(description='instant coding answers via the command line',\n\n                                     epilog=textwrap.dedent('''\\\n\n                                     environment variable examples:\n\n                                       HOWDOI_COLORIZE=1\n\n                                       HOWDOI_DISABLE_CACHE=1\n\n                                       HOWDOI_DISABLE_SSL=1\n\n                                       HOWDOI_SEARCH_ENGINE=google\n\n                                       HOWDOI_URL=serverfault.com\n\n                                     '''),\n\n                                     formatter_class=argparse.RawTextHelpFormatter)\n\n    parser.add_argument('query', metavar='QUERY', type=str, nargs='*', help='the question to answer')\n\n    parser.add_argument('-p', '--pos', help='select answer in specified position (default: 1)',\n\n                        default=1, type=IntRange(1, 20), metavar='POS')\n\n    parser.add_argument('-n', '--num', help='number of answers to return (default: 1)',\n\n                        dest='num_answers', default=1, type=IntRange(1, 20), metavar='NUM')\n\n    parser.add_argument('--num-answers', help=argparse.SUPPRESS)\n\n    parser.add_argument('-a', '--all', help='display the full text of the answer', action='store_true')\n\n    parser.add_argument('-l', '--link', help='display only the answer link', action='store_true')\n\n    parser.add_argument('-c', '--color', help='enable colorized output', action='store_true')\n\n    parser.add_argument('-x', '--explain', help='explain how answer was chosen', action='store_true')\n\n    parser.add_argument('-C', '--clear-cache', help='clear the cache',\n\n                        action='store_true')\n\n    parser.add_argument('-j', '--json', help='return answers in raw json format', dest='json_output',\n\n                        action='store_true')\n\n    parser.add_argument('--json-output', action='store_true', help=argparse.SUPPRESS)\n\n    parser.add_argument('-v', '--version', help='display the current version of howdoi',\n\n                        action='store_true')\n\n    parser.add_argument('-e', '--engine', help='search engine for this query (google, bing, duckduckgo)',\n\n                        dest='search_engine', nargs=\"?\", metavar='ENGINE')\n\n    parser.add_argument('--save', '--stash', help='stash a howdoi answer',\n\n                        action='store_true')\n\n    parser.add_argument('--view', help='view your stash',\n\n                        action='store_true')\n\n    parser.add_argument('--remove', help='remove an entry in your stash',\n\n                        action='store_true')\n\n    parser.add_argument('--empty', help='empty your stash',\n\n                        action='store_true')\n\n    parser.add_argument('--sanity-check', help=argparse.SUPPRESS,\n\n                        action='store_true')\n\n    return parser\n",
    "line_range": [
        652,
        694
    ],
    "command_specific_fields": {
        "method_name": "get_parser"
    },
    "language": "python",
    "commit": "6f8813dcb32a481c3683aff64587181b518454c8",
    "prompt": ""
}