{
    "case_id": "case-1384",
    "repo_name": "AUTOMATIC1111/stable-diffusion-webui",
    "file_path": "modules/patches.py",
    "code_snippet": "\n\ndef patch(key, obj, field, replacement):\n    \"\"\"Replaces a function in a module or a class.\n\n    Also stores the original function in this module, possible to be retrieved via original(key, obj, field).\n    If the function is already replaced by this caller (key), an exception is raised -- use undo() before that.\n\n    Arguments:\n        key: identifying information for who is doing the replacement. You can use __name__.\n        obj: the module or the class\n        field: name of the function as a string\n        replacement: the new function\n\n    Returns:\n        the original function\n    \"\"\"\n\n    patch_key = (obj, field)\n    if patch_key in originals[key]:\n        raise RuntimeError(f\"patch for {field} is already applied\")\n\n    original_func = getattr(obj, field)\n    originals[key][patch_key] = original_func\n\n    setattr(obj, field, replacement)\n\n    return original_func\n",
    "line_range": [
        2,
        29
    ],
    "command_specific_fields": {
        "method_name": "patch"
    },
    "language": "python",
    "commit": "82a973c04367123ae98bd9abdf80d9eda9b910e2",
    "prompt": ""
}